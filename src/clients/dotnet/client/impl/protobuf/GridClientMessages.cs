// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace GridGain.Client.Impl.Protobuf {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal static partial class GridClientMessages {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ObjectWrapper__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ObjectWrapper, global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder> internal__static_org_gridgain_client_message_ObjectWrapper__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_Collection__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.Collection, global::GridGain.Client.Impl.Protobuf.Collection.Builder> internal__static_org_gridgain_client_message_Collection__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_KeyValue__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.KeyValue, global::GridGain.Client.Impl.Protobuf.KeyValue.Builder> internal__static_org_gridgain_client_message_KeyValue__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_Map__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.Map, global::GridGain.Client.Impl.Protobuf.Map.Builder> internal__static_org_gridgain_client_message_Map__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoRequest, global::GridGain.Client.Impl.Protobuf.ProtoRequest.Builder> internal__static_org_gridgain_client_message_ProtoRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoAuthenticationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoAuthenticationRequest, global::GridGain.Client.Impl.Protobuf.ProtoAuthenticationRequest.Builder> internal__static_org_gridgain_client_message_ProtoAuthenticationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoCacheRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest, global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Builder> internal__static_org_gridgain_client_message_ProtoCacheRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoLogRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoLogRequest, global::GridGain.Client.Impl.Protobuf.ProtoLogRequest.Builder> internal__static_org_gridgain_client_message_ProtoLogRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoTaskRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoTaskRequest, global::GridGain.Client.Impl.Protobuf.ProtoTaskRequest.Builder> internal__static_org_gridgain_client_message_ProtoTaskRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoTopologyRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoTopologyRequest, global::GridGain.Client.Impl.Protobuf.ProtoTopologyRequest.Builder> internal__static_org_gridgain_client_message_ProtoTopologyRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoResponse, global::GridGain.Client.Impl.Protobuf.ProtoResponse.Builder> internal__static_org_gridgain_client_message_ProtoResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoTaskBean__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoTaskBean, global::GridGain.Client.Impl.Protobuf.ProtoTaskBean.Builder> internal__static_org_gridgain_client_message_ProtoTaskBean__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoNodeMetricsBean__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean, global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.Builder> internal__static_org_gridgain_client_message_ProtoNodeMetricsBean__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_gridgain_client_message_ProtoNodeBean__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoNodeBean, global::GridGain.Client.Impl.Protobuf.ProtoNodeBean.Builder> internal__static_org_gridgain_client_message_ProtoNodeBean__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GridClientMessages() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChRDbGllbnRNZXNzYWdlcy5wcm90bxIbb3JnLmdyaWRnYWluLmNsaWVudC5t" + 
          "ZXNzYWdlIl0KDU9iamVjdFdyYXBwZXISPAoEdHlwZRgBIAIoDjIuLm9yZy5n" + 
          "cmlkZ2Fpbi5jbGllbnQubWVzc2FnZS5PYmplY3RXcmFwcGVyVHlwZRIOCgZi" + 
          "aW5hcnkYAiACKAwiRgoKQ29sbGVjdGlvbhI4CgRpdGVtGAEgAygLMioub3Jn" + 
          "LmdyaWRnYWluLmNsaWVudC5tZXNzYWdlLk9iamVjdFdyYXBwZXIifgoIS2V5" + 
          "VmFsdWUSNwoDa2V5GAEgAigLMioub3JnLmdyaWRnYWluLmNsaWVudC5tZXNz" + 
          "YWdlLk9iamVjdFdyYXBwZXISOQoFdmFsdWUYAiACKAsyKi5vcmcuZ3JpZGdh" + 
          "aW4uY2xpZW50Lm1lc3NhZ2UuT2JqZWN0V3JhcHBlciI7CgNNYXASNAoFZW50" + 
          "cnkYASADKAsyJS5vcmcuZ3JpZGdhaW4uY2xpZW50Lm1lc3NhZ2UuS2V5VmFs" + 
          "dWUiVwoMUHJvdG9SZXF1ZXN0EhEKCXJlcXVlc3RJZBgBIAIoAxIQCghjbGll" + 
          "bnRJZBgCIAIoDBIUCgxzZXNzaW9uVG9rZW4YAyABKAwSDAoEYm9keRgEIAIo" + 
          "DCJdChpQcm90b0F1dGhlbnRpY2F0aW9uUmVxdWVzdBI/CgtjcmVkZW50aWFs" + 
          "cxgBIAIoCzIqLm9yZy5ncmlkZ2Fpbi5jbGllbnQubWVzc2FnZS5PYmplY3RX" + 
          "cmFwcGVyIuMDChFQcm90b0NhY2hlUmVxdWVzdBJUCglvcGVyYXRpb24YAyAC" + 
          "KA4yQS5vcmcuZ3JpZGdhaW4uY2xpZW50Lm1lc3NhZ2UuUHJvdG9DYWNoZVJl" + 
          "cXVlc3QuR3JpZENhY2hlT3BlcmF0aW9uEhEKCWNhY2hlTmFtZRgEIAEoCRI3" + 
          "CgNrZXkYBSABKAsyKi5vcmcuZ3JpZGdhaW4uY2xpZW50Lm1lc3NhZ2UuT2Jq" + 
          "ZWN0V3JhcHBlchI5CgV2YWx1ZRgGIAEoCzIqLm9yZy5ncmlkZ2Fpbi5jbGll" + 
          "bnQubWVzc2FnZS5PYmplY3RXcmFwcGVyEjoKBnZhbHVlMhgHIAEoCzIqLm9y" + 
          "Zy5ncmlkZ2Fpbi5jbGllbnQubWVzc2FnZS5PYmplY3RXcmFwcGVyEjAKBnZh" + 
          "bHVlcxgIIAEoCzIgLm9yZy5ncmlkZ2Fpbi5jbGllbnQubWVzc2FnZS5NYXAi" + 
          "ggEKEkdyaWRDYWNoZU9wZXJhdGlvbhIHCgNQVVQQARILCgdQVVRfQUxMEAIS" + 
          "BwoDR0VUEAMSCwoHR0VUX0FMTBAEEgcKA1JNVhAFEgsKB1JNVl9BTEwQBhIH" + 
          "CgNBREQQBxILCgdSRVBMQUNFEAgSBwoDQ0FTEAkSCwoHTUVUUklDUxAKIjkK" + 
          "D1Byb3RvTG9nUmVxdWVzdBIMCgRwYXRoGAMgASgJEgwKBGZyb20YBCABKAUS" + 
          "CgoCdG8YBSABKAUiYgoQUHJvdG9UYXNrUmVxdWVzdBIQCgh0YXNrTmFtZRgD" + 
          "IAIoCRI8Cghhcmd1bWVudBgEIAIoCzIqLm9yZy5ncmlkZ2Fpbi5jbGllbnQu" + 
          "bWVzc2FnZS5PYmplY3RXcmFwcGVyImkKFFByb3RvVG9wb2xvZ3lSZXF1ZXN0" + 
          "EhkKEWluY2x1ZGVBdHRyaWJ1dGVzGAMgAigIEhYKDmluY2x1ZGVNZXRyaWNz" + 
          "GAQgAigIEg4KBm5vZGVJZBgFIAEoCRIOCgZub2RlSXAYBiABKAkirAEKDVBy" + 
          "b3RvUmVzcG9uc2USEQoJcmVxdWVzdElkGAEgAigDEhAKCGNsaWVudElkGAIg" + 
          "AigMEg4KBnN0YXR1cxgDIAIoBRIUCgxlcnJvck1lc3NhZ2UYBCABKAkSOgoG" + 
          "cmVzdWx0GAUgASgLMioub3JnLmdyaWRnYWluLmNsaWVudC5tZXNzYWdlLk9i" + 
          "amVjdFdyYXBwZXISFAoMc2Vzc2lvblRva2VuGAYgASgMIngKDVByb3RvVGFz" + 
          "a0JlYW4SCgoCaWQYAiACKAkSEAoIZmluaXNoZWQYAyACKAgSOgoGcmVzdWx0" + 
          "GAQgASgLMioub3JnLmdyaWRnYWluLmNsaWVudC5tZXNzYWdlLk9iamVjdFdy" + 
          "YXBwZXISDQoFZXJyb3IYBSABKAkixAsKFFByb3RvTm9kZU1ldHJpY3NCZWFu" + 
          "EhoKDmxhc3RVcGRhdGVUaW1lGAEgAigDOgItMRIdChFtYXhpbXVtQWN0aXZl" + 
          "Sm9icxgCIAIoBToCLTESHQoRY3VycmVudEFjdGl2ZUpvYnMYAyACKAU6Ai0x" + 
          "Eh0KEWF2ZXJhZ2VBY3RpdmVKb2JzGAQgAigCOgItMRIeChJtYXhpbXVtV2Fp" + 
          "dGluZ0pvYnMYBSACKAU6Ai0xEh4KEmN1cnJlbnRXYWl0aW5nSm9icxgGIAIo" + 
          "BToCLTESHgoSYXZlcmFnZVdhaXRpbmdKb2JzGAcgAigCOgItMRIfChNtYXhp" + 
          "bXVtUmVqZWN0ZWRKb2JzGAggAigFOgItMRIfChNjdXJyZW50UmVqZWN0ZWRK" + 
          "b2JzGAkgAigFOgItMRIfChNhdmVyYWdlUmVqZWN0ZWRKb2JzGAogAigCOgIt" + 
          "MRIgChRtYXhpbXVtQ2FuY2VsbGVkSm9icxgLIAIoBToCLTESIAoUY3VycmVu" + 
          "dENhbmNlbGxlZEpvYnMYDCACKAU6Ai0xEiAKFGF2ZXJhZ2VDYW5jZWxsZWRK" + 
          "b2JzGA0gAigCOgItMRIdChF0b3RhbFJlamVjdGVkSm9icxgOIAIoBToCLTES" + 
          "HgoSdG90YWxDYW5jZWxsZWRKb2JzGA8gAigFOgItMRIdChF0b3RhbEV4ZWN1" + 
          "dGVkSm9icxgQIAIoBToCLTESHgoSbWF4aW11bUpvYldhaXRUaW1lGBEgAigD" + 
          "OgItMRIeChJjdXJyZW50Sm9iV2FpdFRpbWUYEiACKAM6Ai0xEh4KEmF2ZXJh" + 
          "Z2VKb2JXYWl0VGltZRgTIAIoAToCLTESIQoVbWF4aW11bUpvYkV4ZWN1dGVU" + 
          "aW1lGBQgAigDOgItMRIhChVjdXJyZW50Sm9iRXhlY3V0ZVRpbWUYFSACKAM6" + 
          "Ai0xEiEKFWF2ZXJhZ2VKb2JFeGVjdXRlVGltZRgWIAIoAToCLTESGQoNdG90" + 
          "YWxJZGxlVGltZRgXIAIoAzoCLTESGwoPY3VycmVudElkbGVUaW1lGBggAigD" + 
          "OgItMRIVCgl0b3RhbENwdXMYGSACKAU6Ai0xEhoKDmN1cnJlbnRDcHVMb2Fk" + 
          "GBogAigBOgItMRIaCg5hdmVyYWdlQ3B1TG9hZBgbIAIoAToCLTESIQoVaGVh" + 
          "cE1lbW9yeUluaXRpYWxpemVkGBwgAigDOgItMRIaCg5oZWFwTWVtb3J5VXNl" + 
          "ZBgdIAIoAzoCLTESHwoTaGVhcE1lbW9yeUNvbW1pdHRlZBgeIAIoAzoCLTES" + 
          "HQoRaGVhcE1lbW9yeU1heGltdW0YHyACKAM6Ai0xEiQKGG5vbkhlYXBNZW1v" + 
          "cnlJbml0aWFsaXplZBggIAIoAzoCLTESHQoRbm9uSGVhcE1lbW9yeVVzZWQY" + 
          "ISACKAM6Ai0xEiIKFm5vbkhlYXBNZW1vcnlDb21taXR0ZWQYIiACKAM6Ai0x" + 
          "EiAKFG5vbkhlYXBNZW1vcnlNYXhpbXVtGCMgAigDOgItMRISCgZ1cFRpbWUY" + 
          "JCACKAM6Ai0xEhUKCXN0YXJ0VGltZRglIAIoAzoCLTESGQoNbm9kZVN0YXJ0" + 
          "VGltZRgmIAIoAzoCLTESHgoSY3VycmVudFRocmVhZENvdW50GCcgAigFOgIt" + 
          "MRIeChJtYXhpbXVtVGhyZWFkQ291bnQYKCACKAU6Ai0xEiMKF3RvdGFsU3Rh" + 
          "cnRlZFRocmVhZENvdW50GCkgAigDOgItMRIkChhjdXJyZW50RGFlbW9uVGhy" + 
          "ZWFkQ291bnQYKiACKAU6Ai0xEh8KE2ZpbGVTeXN0ZW1GcmVlU3BhY2UYKyAC" + 
          "KAM6Ai0xEiAKFGZpbGVTeXN0ZW1Ub3RhbFNwYWNlGCwgAigDOgItMRIhChVm" + 
          "aWxlU3lzdGVtVXNhYmxlU3BhY2UYLSACKAM6Ai0xEhsKD2xhc3REYXRhVmVy" + 
          "c2lvbhguIAIoAzoCLTEioQIKDVByb3RvTm9kZUJlYW4SDgoGbm9kZUlkGAEg" + 
          "AigJEhcKD2ludGVybmFsQWRkcmVzcxgCIAMoCRIXCg9leHRlcm5hbEFkZHJl" + 
          "c3MYAyADKAkSDwoHdGNwUG9ydBgEIAIoBRIRCglqZXR0eVBvcnQYBSACKAUS" + 
          "QgoHbWV0cmljcxgGIAEoCzIxLm9yZy5ncmlkZ2Fpbi5jbGllbnQubWVzc2Fn" + 
          "ZS5Qcm90b05vZGVNZXRyaWNzQmVhbhI0CgphdHRyaWJ1dGVzGAcgASgLMiAu" + 
          "b3JnLmdyaWRnYWluLmNsaWVudC5tZXNzYWdlLk1hcBIwCgZjYWNoZXMYCSAB" + 
          "KAsyIC5vcmcuZ3JpZGdhaW4uY2xpZW50Lm1lc3NhZ2UuTWFwKqMCChFPYmpl" + 
          "Y3RXcmFwcGVyVHlwZRIICgROT05FEAASCAoEQk9PTBABEggKBEJZVEUQAhIJ" + 
          "CgVTSE9SVBADEgkKBUlOVDMyEAQSCQoFSU5UNjQQBRIJCgVGTE9BVBAGEgoK" + 
          "BkRPVUJMRRAHEgkKBUJZVEVTEAgSCgoGU1RSSU5HEAkSDgoKQ09MTEVDVElP" + 
          "ThAKEgcKA01BUBALEhEKDUNBQ0hFX1JFUVVFU1QQFBIQCgxUQVNLX1JFUVVF" + 
          "U1QQFRIPCgtMT0dfUkVRVUVTVBAWEhQKEFRPUE9MT0dZX1JFUVVFU1QQFxIQ" + 
          "CgxBVVRIX1JFUVVFU1QQGBIMCghSRVNQT05TRRAoEg0KCU5PREVfQkVBThA8" + 
          "Eg0KCVRBU0tfQkVBThA9Qj8KJG9yZy5ncmlkZ2Fpbi5jbGllbnQubWVzc2Fn" + 
          "ZS5wcm90b2J1ZkIXQ2xpZW50TWVzc2FnZXNQcm90b2NvbHM=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_org_gridgain_client_message_ObjectWrapper__Descriptor = Descriptor.MessageTypes[0];
        internal__static_org_gridgain_client_message_ObjectWrapper__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ObjectWrapper, global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder>(internal__static_org_gridgain_client_message_ObjectWrapper__Descriptor,
                new string[] { "Type", "Binary", });
        internal__static_org_gridgain_client_message_Collection__Descriptor = Descriptor.MessageTypes[1];
        internal__static_org_gridgain_client_message_Collection__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.Collection, global::GridGain.Client.Impl.Protobuf.Collection.Builder>(internal__static_org_gridgain_client_message_Collection__Descriptor,
                new string[] { "Item", });
        internal__static_org_gridgain_client_message_KeyValue__Descriptor = Descriptor.MessageTypes[2];
        internal__static_org_gridgain_client_message_KeyValue__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.KeyValue, global::GridGain.Client.Impl.Protobuf.KeyValue.Builder>(internal__static_org_gridgain_client_message_KeyValue__Descriptor,
                new string[] { "Key", "Value", });
        internal__static_org_gridgain_client_message_Map__Descriptor = Descriptor.MessageTypes[3];
        internal__static_org_gridgain_client_message_Map__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.Map, global::GridGain.Client.Impl.Protobuf.Map.Builder>(internal__static_org_gridgain_client_message_Map__Descriptor,
                new string[] { "Entry", });
        internal__static_org_gridgain_client_message_ProtoRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_org_gridgain_client_message_ProtoRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoRequest, global::GridGain.Client.Impl.Protobuf.ProtoRequest.Builder>(internal__static_org_gridgain_client_message_ProtoRequest__Descriptor,
                new string[] { "RequestId", "ClientId", "SessionToken", "Body", });
        internal__static_org_gridgain_client_message_ProtoAuthenticationRequest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_org_gridgain_client_message_ProtoAuthenticationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoAuthenticationRequest, global::GridGain.Client.Impl.Protobuf.ProtoAuthenticationRequest.Builder>(internal__static_org_gridgain_client_message_ProtoAuthenticationRequest__Descriptor,
                new string[] { "Credentials", });
        internal__static_org_gridgain_client_message_ProtoCacheRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_org_gridgain_client_message_ProtoCacheRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest, global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Builder>(internal__static_org_gridgain_client_message_ProtoCacheRequest__Descriptor,
                new string[] { "Operation", "CacheName", "Key", "Value", "Value2", "Values", });
        internal__static_org_gridgain_client_message_ProtoLogRequest__Descriptor = Descriptor.MessageTypes[7];
        internal__static_org_gridgain_client_message_ProtoLogRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoLogRequest, global::GridGain.Client.Impl.Protobuf.ProtoLogRequest.Builder>(internal__static_org_gridgain_client_message_ProtoLogRequest__Descriptor,
                new string[] { "Path", "From", "To", });
        internal__static_org_gridgain_client_message_ProtoTaskRequest__Descriptor = Descriptor.MessageTypes[8];
        internal__static_org_gridgain_client_message_ProtoTaskRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoTaskRequest, global::GridGain.Client.Impl.Protobuf.ProtoTaskRequest.Builder>(internal__static_org_gridgain_client_message_ProtoTaskRequest__Descriptor,
                new string[] { "TaskName", "Argument", });
        internal__static_org_gridgain_client_message_ProtoTopologyRequest__Descriptor = Descriptor.MessageTypes[9];
        internal__static_org_gridgain_client_message_ProtoTopologyRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoTopologyRequest, global::GridGain.Client.Impl.Protobuf.ProtoTopologyRequest.Builder>(internal__static_org_gridgain_client_message_ProtoTopologyRequest__Descriptor,
                new string[] { "IncludeAttributes", "IncludeMetrics", "NodeId", "NodeIp", });
        internal__static_org_gridgain_client_message_ProtoResponse__Descriptor = Descriptor.MessageTypes[10];
        internal__static_org_gridgain_client_message_ProtoResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoResponse, global::GridGain.Client.Impl.Protobuf.ProtoResponse.Builder>(internal__static_org_gridgain_client_message_ProtoResponse__Descriptor,
                new string[] { "RequestId", "ClientId", "Status", "ErrorMessage", "Result", "SessionToken", });
        internal__static_org_gridgain_client_message_ProtoTaskBean__Descriptor = Descriptor.MessageTypes[11];
        internal__static_org_gridgain_client_message_ProtoTaskBean__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoTaskBean, global::GridGain.Client.Impl.Protobuf.ProtoTaskBean.Builder>(internal__static_org_gridgain_client_message_ProtoTaskBean__Descriptor,
                new string[] { "Id", "Finished", "Result", "Error", });
        internal__static_org_gridgain_client_message_ProtoNodeMetricsBean__Descriptor = Descriptor.MessageTypes[12];
        internal__static_org_gridgain_client_message_ProtoNodeMetricsBean__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean, global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.Builder>(internal__static_org_gridgain_client_message_ProtoNodeMetricsBean__Descriptor,
                new string[] { "LastUpdateTime", "MaximumActiveJobs", "CurrentActiveJobs", "AverageActiveJobs", "MaximumWaitingJobs", "CurrentWaitingJobs", "AverageWaitingJobs", "MaximumRejectedJobs", "CurrentRejectedJobs", "AverageRejectedJobs", "MaximumCancelledJobs", "CurrentCancelledJobs", "AverageCancelledJobs", "TotalRejectedJobs", "TotalCancelledJobs", "TotalExecutedJobs", "MaximumJobWaitTime", "CurrentJobWaitTime", "AverageJobWaitTime", "MaximumJobExecuteTime", "CurrentJobExecuteTime", "AverageJobExecuteTime", "TotalIdleTime", "CurrentIdleTime", "TotalCpus", "CurrentCpuLoad", "AverageCpuLoad", "HeapMemoryInitialized", "HeapMemoryUsed", "HeapMemoryCommitted", "HeapMemoryMaximum", "NonHeapMemoryInitialized", "NonHeapMemoryUsed", "NonHeapMemoryCommitted", "NonHeapMemoryMaximum", "UpTime", "StartTime", "NodeStartTime", "CurrentThreadCount", "MaximumThreadCount", "TotalStartedThreadCount", "CurrentDaemonThreadCount", "FileSystemFreeSpace", "FileSystemTotalSpace", "FileSystemUsableSpace", "LastDataVersion", });
        internal__static_org_gridgain_client_message_ProtoNodeBean__Descriptor = Descriptor.MessageTypes[13];
        internal__static_org_gridgain_client_message_ProtoNodeBean__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::GridGain.Client.Impl.Protobuf.ProtoNodeBean, global::GridGain.Client.Impl.Protobuf.ProtoNodeBean.Builder>(internal__static_org_gridgain_client_message_ProtoNodeBean__Descriptor,
                new string[] { "NodeId", "InternalAddress", "ExternalAddress", "TcpPort", "JettyPort", "Metrics", "Attributes", "Caches", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal enum ObjectWrapperType {
    NONE = 0,
    BOOL = 1,
    BYTE = 2,
    SHORT = 3,
    INT32 = 4,
    INT64 = 5,
    FLOAT = 6,
    DOUBLE = 7,
    BYTES = 8,
    STRING = 9,
    COLLECTION = 10,
    MAP = 11,
    CACHE_REQUEST = 20,
    TASK_REQUEST = 21,
    LOG_REQUEST = 22,
    TOPOLOGY_REQUEST = 23,
    AUTH_REQUEST = 24,
    RESPONSE = 40,
    NODE_BEAN = 60,
    TASK_BEAN = 61,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ObjectWrapper : pb::GeneratedMessage<ObjectWrapper, ObjectWrapper.Builder> {
    private ObjectWrapper() { }
    private static readonly ObjectWrapper defaultInstance = new ObjectWrapper().MakeReadOnly();
    private static readonly string[] _objectWrapperFieldNames = new string[] { "binary", "type" };
    private static readonly uint[] _objectWrapperFieldTags = new uint[] { 18, 8 };
    public static ObjectWrapper DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ObjectWrapper DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ObjectWrapper ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ObjectWrapper__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ObjectWrapper, ObjectWrapper.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ObjectWrapper__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapperType type_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapperType.NONE;
    public bool HasType {
      get { return hasType; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapperType Type {
      get { return type_; }
    }
    
    public const int BinaryFieldNumber = 2;
    private bool hasBinary;
    private pb::ByteString binary_ = pb::ByteString.Empty;
    public bool HasBinary {
      get { return hasBinary; }
    }
    public pb::ByteString Binary {
      get { return binary_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasBinary) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _objectWrapperFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (hasBinary) {
        output.WriteBytes(2, field_names[0], Binary);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
        }
        if (hasBinary) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Binary);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ObjectWrapper ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObjectWrapper ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObjectWrapper ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObjectWrapper ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObjectWrapper ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObjectWrapper ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ObjectWrapper ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ObjectWrapper ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ObjectWrapper ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObjectWrapper ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ObjectWrapper MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ObjectWrapper prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ObjectWrapper, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ObjectWrapper cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ObjectWrapper result;
      
      private ObjectWrapper PrepareBuilder() {
        if (resultIsReadOnly) {
          ObjectWrapper original = result;
          result = new ObjectWrapper();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ObjectWrapper MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Descriptor; }
      }
      
      public override ObjectWrapper DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
      }
      
      public override ObjectWrapper BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ObjectWrapper) {
          return MergeFrom((ObjectWrapper) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ObjectWrapper other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasBinary) {
          Binary = other.Binary;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_objectWrapperFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _objectWrapperFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasBinary = input.ReadBytes(ref result.binary_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapperType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::GridGain.Client.Impl.Protobuf.ObjectWrapperType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapperType.NONE;
        return this;
      }
      
      public bool HasBinary {
        get { return result.hasBinary; }
      }
      public pb::ByteString Binary {
        get { return result.Binary; }
        set { SetBinary(value); }
      }
      public Builder SetBinary(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBinary = true;
        result.binary_ = value;
        return this;
      }
      public Builder ClearBinary() {
        PrepareBuilder();
        result.hasBinary = false;
        result.binary_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ObjectWrapper() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class Collection : pb::GeneratedMessage<Collection, Collection.Builder> {
    private Collection() { }
    private static readonly Collection defaultInstance = new Collection().MakeReadOnly();
    private static readonly string[] _collectionFieldNames = new string[] { "item" };
    private static readonly uint[] _collectionFieldTags = new uint[] { 10 };
    public static Collection DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Collection DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Collection ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_Collection__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Collection, Collection.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_Collection__FieldAccessorTable; }
    }
    
    public const int ItemFieldNumber = 1;
    private pbc::PopsicleList<global::GridGain.Client.Impl.Protobuf.ObjectWrapper> item_ = new pbc::PopsicleList<global::GridGain.Client.Impl.Protobuf.ObjectWrapper>();
    public scg::IList<global::GridGain.Client.Impl.Protobuf.ObjectWrapper> ItemList {
      get { return item_; }
    }
    public int ItemCount {
      get { return item_.Count; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper GetItem(int index) {
      return item_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::GridGain.Client.Impl.Protobuf.ObjectWrapper element in ItemList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _collectionFieldNames;
      if (item_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], item_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::GridGain.Client.Impl.Protobuf.ObjectWrapper element in ItemList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Collection ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collection ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collection ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collection ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collection ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collection ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Collection ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Collection ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Collection ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collection ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Collection MakeReadOnly() {
      item_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Collection prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<Collection, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Collection cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Collection result;
      
      private Collection PrepareBuilder() {
        if (resultIsReadOnly) {
          Collection original = result;
          result = new Collection();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Collection MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.Collection.Descriptor; }
      }
      
      public override Collection DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.Collection.DefaultInstance; }
      }
      
      public override Collection BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Collection) {
          return MergeFrom((Collection) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Collection other) {
        if (other == global::GridGain.Client.Impl.Protobuf.Collection.DefaultInstance) return this;
        PrepareBuilder();
        if (other.item_.Count != 0) {
          result.item_.Add(other.item_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_collectionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _collectionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.item_, global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::GridGain.Client.Impl.Protobuf.ObjectWrapper> ItemList {
        get { return PrepareBuilder().item_; }
      }
      public int ItemCount {
        get { return result.ItemCount; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper GetItem(int index) {
        return result.GetItem(index);
      }
      public Builder SetItem(int index, global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.item_[index] = value;
        return this;
      }
      public Builder SetItem(int index, global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.item_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItem(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.item_.Add(value);
        return this;
      }
      public Builder AddItem(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.item_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItem(scg::IEnumerable<global::GridGain.Client.Impl.Protobuf.ObjectWrapper> values) {
        PrepareBuilder();
        result.item_.Add(values);
        return this;
      }
      public Builder ClearItem() {
        PrepareBuilder();
        result.item_.Clear();
        return this;
      }
    }
    static Collection() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class KeyValue : pb::GeneratedMessage<KeyValue, KeyValue.Builder> {
    private KeyValue() { }
    private static readonly KeyValue defaultInstance = new KeyValue().MakeReadOnly();
    private static readonly string[] _keyValueFieldNames = new string[] { "key", "value" };
    private static readonly uint[] _keyValueFieldTags = new uint[] { 10, 18 };
    public static KeyValue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override KeyValue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override KeyValue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_KeyValue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<KeyValue, KeyValue.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_KeyValue__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper key_;
    public bool HasKey {
      get { return hasKey; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Key {
      get { return key_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Value {
      get { return value_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKey) return false;
        if (!hasValue) return false;
        if (!Key.IsInitialized) return false;
        if (!Value.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _keyValueFieldNames;
      if (hasKey) {
        output.WriteMessage(1, field_names[0], Key);
      }
      if (hasValue) {
        output.WriteMessage(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Key);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static KeyValue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KeyValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KeyValue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KeyValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KeyValue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KeyValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static KeyValue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static KeyValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static KeyValue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KeyValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private KeyValue MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(KeyValue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<KeyValue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(KeyValue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private KeyValue result;
      
      private KeyValue PrepareBuilder() {
        if (resultIsReadOnly) {
          KeyValue original = result;
          result = new KeyValue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override KeyValue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.KeyValue.Descriptor; }
      }
      
      public override KeyValue DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.KeyValue.DefaultInstance; }
      }
      
      public override KeyValue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is KeyValue) {
          return MergeFrom((KeyValue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(KeyValue other) {
        if (other == global::GridGain.Client.Impl.Protobuf.KeyValue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          MergeKey(other.Key);
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_keyValueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _keyValueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasKey) {
                subBuilder.MergeFrom(Key);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Key = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
       get { return result.hasKey; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder SetKey(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = builderForValue.Build();
        return this;
      }
      public Builder MergeKey(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasKey &&
            result.key_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.key_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.key_).MergeFrom(value).BuildPartial();
        } else {
          result.key_ = value;
        }
        result.hasKey = true;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = null;
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.value_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
    }
    static KeyValue() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class Map : pb::GeneratedMessage<Map, Map.Builder> {
    private Map() { }
    private static readonly Map defaultInstance = new Map().MakeReadOnly();
    private static readonly string[] _mapFieldNames = new string[] { "entry" };
    private static readonly uint[] _mapFieldTags = new uint[] { 10 };
    public static Map DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Map DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Map ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_Map__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Map, Map.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_Map__FieldAccessorTable; }
    }
    
    public const int EntryFieldNumber = 1;
    private pbc::PopsicleList<global::GridGain.Client.Impl.Protobuf.KeyValue> entry_ = new pbc::PopsicleList<global::GridGain.Client.Impl.Protobuf.KeyValue>();
    public scg::IList<global::GridGain.Client.Impl.Protobuf.KeyValue> EntryList {
      get { return entry_; }
    }
    public int EntryCount {
      get { return entry_.Count; }
    }
    public global::GridGain.Client.Impl.Protobuf.KeyValue GetEntry(int index) {
      return entry_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::GridGain.Client.Impl.Protobuf.KeyValue element in EntryList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _mapFieldNames;
      if (entry_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], entry_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::GridGain.Client.Impl.Protobuf.KeyValue element in EntryList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Map ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Map ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Map ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Map ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Map ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Map ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Map ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Map ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Map ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Map ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Map MakeReadOnly() {
      entry_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Map prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<Map, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Map cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Map result;
      
      private Map PrepareBuilder() {
        if (resultIsReadOnly) {
          Map original = result;
          result = new Map();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Map MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.Map.Descriptor; }
      }
      
      public override Map DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.Map.DefaultInstance; }
      }
      
      public override Map BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Map) {
          return MergeFrom((Map) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Map other) {
        if (other == global::GridGain.Client.Impl.Protobuf.Map.DefaultInstance) return this;
        PrepareBuilder();
        if (other.entry_.Count != 0) {
          result.entry_.Add(other.entry_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mapFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mapFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.entry_, global::GridGain.Client.Impl.Protobuf.KeyValue.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::GridGain.Client.Impl.Protobuf.KeyValue> EntryList {
        get { return PrepareBuilder().entry_; }
      }
      public int EntryCount {
        get { return result.EntryCount; }
      }
      public global::GridGain.Client.Impl.Protobuf.KeyValue GetEntry(int index) {
        return result.GetEntry(index);
      }
      public Builder SetEntry(int index, global::GridGain.Client.Impl.Protobuf.KeyValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entry_[index] = value;
        return this;
      }
      public Builder SetEntry(int index, global::GridGain.Client.Impl.Protobuf.KeyValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entry_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntry(global::GridGain.Client.Impl.Protobuf.KeyValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entry_.Add(value);
        return this;
      }
      public Builder AddEntry(global::GridGain.Client.Impl.Protobuf.KeyValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entry_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntry(scg::IEnumerable<global::GridGain.Client.Impl.Protobuf.KeyValue> values) {
        PrepareBuilder();
        result.entry_.Add(values);
        return this;
      }
      public Builder ClearEntry() {
        PrepareBuilder();
        result.entry_.Clear();
        return this;
      }
    }
    static Map() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoRequest : pb::GeneratedMessage<ProtoRequest, ProtoRequest.Builder> {
    private ProtoRequest() { }
    private static readonly ProtoRequest defaultInstance = new ProtoRequest().MakeReadOnly();
    private static readonly string[] _protoRequestFieldNames = new string[] { "body", "clientId", "requestId", "sessionToken" };
    private static readonly uint[] _protoRequestFieldTags = new uint[] { 34, 18, 8, 26 };
    public static ProtoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoRequest, ProtoRequest.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoRequest__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private long requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public long RequestId {
      get { return requestId_; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private pb::ByteString clientId_ = pb::ByteString.Empty;
    public bool HasClientId {
      get { return hasClientId; }
    }
    public pb::ByteString ClientId {
      get { return clientId_; }
    }
    
    public const int SessionTokenFieldNumber = 3;
    private bool hasSessionToken;
    private pb::ByteString sessionToken_ = pb::ByteString.Empty;
    public bool HasSessionToken {
      get { return hasSessionToken; }
    }
    public pb::ByteString SessionToken {
      get { return sessionToken_; }
    }
    
    public const int BodyFieldNumber = 4;
    private bool hasBody;
    private pb::ByteString body_ = pb::ByteString.Empty;
    public bool HasBody {
      get { return hasBody; }
    }
    public pb::ByteString Body {
      get { return body_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestId) return false;
        if (!hasClientId) return false;
        if (!hasBody) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoRequestFieldNames;
      if (hasRequestId) {
        output.WriteInt64(1, field_names[2], RequestId);
      }
      if (hasClientId) {
        output.WriteBytes(2, field_names[1], ClientId);
      }
      if (hasSessionToken) {
        output.WriteBytes(3, field_names[3], SessionToken);
      }
      if (hasBody) {
        output.WriteBytes(4, field_names[0], Body);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, RequestId);
        }
        if (hasClientId) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, ClientId);
        }
        if (hasSessionToken) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, SessionToken);
        }
        if (hasBody) {
          size += pb::CodedOutputStream.ComputeBytesSize(4, Body);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoRequest result;
      
      private ProtoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoRequest original = result;
          result = new ProtoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoRequest.Descriptor; }
      }
      
      public override ProtoRequest DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoRequest.DefaultInstance; }
      }
      
      public override ProtoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoRequest) {
          return MergeFrom((ProtoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoRequest other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasSessionToken) {
          SessionToken = other.SessionToken;
        }
        if (other.HasBody) {
          Body = other.Body;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestId = input.ReadInt64(ref result.requestId_);
              break;
            }
            case 18: {
              result.hasClientId = input.ReadBytes(ref result.clientId_);
              break;
            }
            case 26: {
              result.hasSessionToken = input.ReadBytes(ref result.sessionToken_);
              break;
            }
            case 34: {
              result.hasBody = input.ReadBytes(ref result.body_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      public long RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(long value) {
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = 0L;
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public pb::ByteString ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasSessionToken {
        get { return result.hasSessionToken; }
      }
      public pb::ByteString SessionToken {
        get { return result.SessionToken; }
        set { SetSessionToken(value); }
      }
      public Builder SetSessionToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionToken = true;
        result.sessionToken_ = value;
        return this;
      }
      public Builder ClearSessionToken() {
        PrepareBuilder();
        result.hasSessionToken = false;
        result.sessionToken_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasBody {
        get { return result.hasBody; }
      }
      public pb::ByteString Body {
        get { return result.Body; }
        set { SetBody(value); }
      }
      public Builder SetBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder ClearBody() {
        PrepareBuilder();
        result.hasBody = false;
        result.body_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ProtoRequest() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoAuthenticationRequest : pb::GeneratedMessage<ProtoAuthenticationRequest, ProtoAuthenticationRequest.Builder> {
    private ProtoAuthenticationRequest() { }
    private static readonly ProtoAuthenticationRequest defaultInstance = new ProtoAuthenticationRequest().MakeReadOnly();
    private static readonly string[] _protoAuthenticationRequestFieldNames = new string[] { "credentials" };
    private static readonly uint[] _protoAuthenticationRequestFieldTags = new uint[] { 10 };
    public static ProtoAuthenticationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoAuthenticationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoAuthenticationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoAuthenticationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoAuthenticationRequest, ProtoAuthenticationRequest.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoAuthenticationRequest__FieldAccessorTable; }
    }
    
    public const int CredentialsFieldNumber = 1;
    private bool hasCredentials;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper credentials_;
    public bool HasCredentials {
      get { return hasCredentials; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Credentials {
      get { return credentials_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCredentials) return false;
        if (!Credentials.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoAuthenticationRequestFieldNames;
      if (hasCredentials) {
        output.WriteMessage(1, field_names[0], Credentials);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCredentials) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Credentials);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoAuthenticationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoAuthenticationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoAuthenticationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoAuthenticationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoAuthenticationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoAuthenticationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoAuthenticationRequest result;
      
      private ProtoAuthenticationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoAuthenticationRequest original = result;
          result = new ProtoAuthenticationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoAuthenticationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoAuthenticationRequest.Descriptor; }
      }
      
      public override ProtoAuthenticationRequest DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoAuthenticationRequest.DefaultInstance; }
      }
      
      public override ProtoAuthenticationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoAuthenticationRequest) {
          return MergeFrom((ProtoAuthenticationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoAuthenticationRequest other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoAuthenticationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCredentials) {
          MergeCredentials(other.Credentials);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoAuthenticationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoAuthenticationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasCredentials) {
                subBuilder.MergeFrom(Credentials);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Credentials = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCredentials {
       get { return result.hasCredentials; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Credentials {
        get { return result.Credentials; }
        set { SetCredentials(value); }
      }
      public Builder SetCredentials(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCredentials = true;
        result.credentials_ = value;
        return this;
      }
      public Builder SetCredentials(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCredentials = true;
        result.credentials_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCredentials(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCredentials &&
            result.credentials_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.credentials_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.credentials_).MergeFrom(value).BuildPartial();
        } else {
          result.credentials_ = value;
        }
        result.hasCredentials = true;
        return this;
      }
      public Builder ClearCredentials() {
        PrepareBuilder();
        result.hasCredentials = false;
        result.credentials_ = null;
        return this;
      }
    }
    static ProtoAuthenticationRequest() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoCacheRequest : pb::GeneratedMessage<ProtoCacheRequest, ProtoCacheRequest.Builder> {
    private ProtoCacheRequest() { }
    private static readonly ProtoCacheRequest defaultInstance = new ProtoCacheRequest().MakeReadOnly();
    private static readonly string[] _protoCacheRequestFieldNames = new string[] { "cacheName", "key", "operation", "value", "value2", "values" };
    private static readonly uint[] _protoCacheRequestFieldTags = new uint[] { 34, 42, 24, 50, 58, 66 };
    public static ProtoCacheRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoCacheRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoCacheRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoCacheRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoCacheRequest, ProtoCacheRequest.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoCacheRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      internal enum GridCacheOperation {
        PUT = 1,
        PUT_ALL = 2,
        GET = 3,
        GET_ALL = 4,
        RMV = 5,
        RMV_ALL = 6,
        ADD = 7,
        REPLACE = 8,
        CAS = 9,
        METRICS = 10,
      }
      
    }
    #endregion
    
    public const int OperationFieldNumber = 3;
    private bool hasOperation;
    private global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Types.GridCacheOperation operation_ = global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Types.GridCacheOperation.PUT;
    public bool HasOperation {
      get { return hasOperation; }
    }
    public global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Types.GridCacheOperation Operation {
      get { return operation_; }
    }
    
    public const int CacheNameFieldNumber = 4;
    private bool hasCacheName;
    private string cacheName_ = "";
    public bool HasCacheName {
      get { return hasCacheName; }
    }
    public string CacheName {
      get { return cacheName_; }
    }
    
    public const int KeyFieldNumber = 5;
    private bool hasKey;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper key_;
    public bool HasKey {
      get { return hasKey; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Key {
      get { return key_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public const int ValueFieldNumber = 6;
    private bool hasValue;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Value {
      get { return value_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public const int Value2FieldNumber = 7;
    private bool hasValue2;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper value2_;
    public bool HasValue2 {
      get { return hasValue2; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Value2 {
      get { return value2_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public const int ValuesFieldNumber = 8;
    private bool hasValues;
    private global::GridGain.Client.Impl.Protobuf.Map values_;
    public bool HasValues {
      get { return hasValues; }
    }
    public global::GridGain.Client.Impl.Protobuf.Map Values {
      get { return values_ ?? global::GridGain.Client.Impl.Protobuf.Map.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOperation) return false;
        if (HasKey) {
          if (!Key.IsInitialized) return false;
        }
        if (HasValue) {
          if (!Value.IsInitialized) return false;
        }
        if (HasValue2) {
          if (!Value2.IsInitialized) return false;
        }
        if (HasValues) {
          if (!Values.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoCacheRequestFieldNames;
      if (hasOperation) {
        output.WriteEnum(3, field_names[2], (int) Operation, Operation);
      }
      if (hasCacheName) {
        output.WriteString(4, field_names[0], CacheName);
      }
      if (hasKey) {
        output.WriteMessage(5, field_names[1], Key);
      }
      if (hasValue) {
        output.WriteMessage(6, field_names[3], Value);
      }
      if (hasValue2) {
        output.WriteMessage(7, field_names[4], Value2);
      }
      if (hasValues) {
        output.WriteMessage(8, field_names[5], Values);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOperation) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Operation);
        }
        if (hasCacheName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, CacheName);
        }
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Key);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Value);
        }
        if (hasValue2) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, Value2);
        }
        if (hasValues) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, Values);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoCacheRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoCacheRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoCacheRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoCacheRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoCacheRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoCacheRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoCacheRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoCacheRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoCacheRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoCacheRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoCacheRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoCacheRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoCacheRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoCacheRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoCacheRequest result;
      
      private ProtoCacheRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoCacheRequest original = result;
          result = new ProtoCacheRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoCacheRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Descriptor; }
      }
      
      public override ProtoCacheRequest DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.DefaultInstance; }
      }
      
      public override ProtoCacheRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoCacheRequest) {
          return MergeFrom((ProtoCacheRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoCacheRequest other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOperation) {
          Operation = other.Operation;
        }
        if (other.HasCacheName) {
          CacheName = other.CacheName;
        }
        if (other.HasKey) {
          MergeKey(other.Key);
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        if (other.HasValue2) {
          MergeValue2(other.Value2);
        }
        if (other.HasValues) {
          MergeValues(other.Values);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoCacheRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoCacheRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.operation_, out unknown)) {
                result.hasOperation = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              result.hasCacheName = input.ReadString(ref result.cacheName_);
              break;
            }
            case 42: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasKey) {
                subBuilder.MergeFrom(Key);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Key = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasValue2) {
                subBuilder.MergeFrom(Value2);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value2 = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::GridGain.Client.Impl.Protobuf.Map.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.Map.CreateBuilder();
              if (result.hasValues) {
                subBuilder.MergeFrom(Values);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Values = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOperation {
       get { return result.hasOperation; }
      }
      public global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Types.GridCacheOperation Operation {
        get { return result.Operation; }
        set { SetOperation(value); }
      }
      public Builder SetOperation(global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Types.GridCacheOperation value) {
        PrepareBuilder();
        result.hasOperation = true;
        result.operation_ = value;
        return this;
      }
      public Builder ClearOperation() {
        PrepareBuilder();
        result.hasOperation = false;
        result.operation_ = global::GridGain.Client.Impl.Protobuf.ProtoCacheRequest.Types.GridCacheOperation.PUT;
        return this;
      }
      
      public bool HasCacheName {
        get { return result.hasCacheName; }
      }
      public string CacheName {
        get { return result.CacheName; }
        set { SetCacheName(value); }
      }
      public Builder SetCacheName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCacheName = true;
        result.cacheName_ = value;
        return this;
      }
      public Builder ClearCacheName() {
        PrepareBuilder();
        result.hasCacheName = false;
        result.cacheName_ = "";
        return this;
      }
      
      public bool HasKey {
       get { return result.hasKey; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder SetKey(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = builderForValue.Build();
        return this;
      }
      public Builder MergeKey(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasKey &&
            result.key_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.key_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.key_).MergeFrom(value).BuildPartial();
        } else {
          result.key_ = value;
        }
        result.hasKey = true;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = null;
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.value_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
      
      public bool HasValue2 {
       get { return result.hasValue2; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Value2 {
        get { return result.Value2; }
        set { SetValue2(value); }
      }
      public Builder SetValue2(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue2 = true;
        result.value2_ = value;
        return this;
      }
      public Builder SetValue2(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue2 = true;
        result.value2_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue2(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue2 &&
            result.value2_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.value2_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.value2_).MergeFrom(value).BuildPartial();
        } else {
          result.value2_ = value;
        }
        result.hasValue2 = true;
        return this;
      }
      public Builder ClearValue2() {
        PrepareBuilder();
        result.hasValue2 = false;
        result.value2_ = null;
        return this;
      }
      
      public bool HasValues {
       get { return result.hasValues; }
      }
      public global::GridGain.Client.Impl.Protobuf.Map Values {
        get { return result.Values; }
        set { SetValues(value); }
      }
      public Builder SetValues(global::GridGain.Client.Impl.Protobuf.Map value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValues = true;
        result.values_ = value;
        return this;
      }
      public Builder SetValues(global::GridGain.Client.Impl.Protobuf.Map.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValues = true;
        result.values_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValues(global::GridGain.Client.Impl.Protobuf.Map value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValues &&
            result.values_ != global::GridGain.Client.Impl.Protobuf.Map.DefaultInstance) {
            result.values_ = global::GridGain.Client.Impl.Protobuf.Map.CreateBuilder(result.values_).MergeFrom(value).BuildPartial();
        } else {
          result.values_ = value;
        }
        result.hasValues = true;
        return this;
      }
      public Builder ClearValues() {
        PrepareBuilder();
        result.hasValues = false;
        result.values_ = null;
        return this;
      }
    }
    static ProtoCacheRequest() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoLogRequest : pb::GeneratedMessage<ProtoLogRequest, ProtoLogRequest.Builder> {
    private ProtoLogRequest() { }
    private static readonly ProtoLogRequest defaultInstance = new ProtoLogRequest().MakeReadOnly();
    private static readonly string[] _protoLogRequestFieldNames = new string[] { "from", "path", "to" };
    private static readonly uint[] _protoLogRequestFieldTags = new uint[] { 32, 26, 40 };
    public static ProtoLogRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoLogRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoLogRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoLogRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoLogRequest, ProtoLogRequest.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoLogRequest__FieldAccessorTable; }
    }
    
    public const int PathFieldNumber = 3;
    private bool hasPath;
    private string path_ = "";
    public bool HasPath {
      get { return hasPath; }
    }
    public string Path {
      get { return path_; }
    }
    
    public const int FromFieldNumber = 4;
    private bool hasFrom;
    private int from_;
    public bool HasFrom {
      get { return hasFrom; }
    }
    public int From {
      get { return from_; }
    }
    
    public const int ToFieldNumber = 5;
    private bool hasTo;
    private int to_;
    public bool HasTo {
      get { return hasTo; }
    }
    public int To {
      get { return to_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoLogRequestFieldNames;
      if (hasPath) {
        output.WriteString(3, field_names[1], Path);
      }
      if (hasFrom) {
        output.WriteInt32(4, field_names[0], From);
      }
      if (hasTo) {
        output.WriteInt32(5, field_names[2], To);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPath) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Path);
        }
        if (hasFrom) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, From);
        }
        if (hasTo) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, To);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoLogRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoLogRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoLogRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoLogRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoLogRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoLogRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoLogRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoLogRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoLogRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoLogRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoLogRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoLogRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoLogRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoLogRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoLogRequest result;
      
      private ProtoLogRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoLogRequest original = result;
          result = new ProtoLogRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoLogRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoLogRequest.Descriptor; }
      }
      
      public override ProtoLogRequest DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoLogRequest.DefaultInstance; }
      }
      
      public override ProtoLogRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoLogRequest) {
          return MergeFrom((ProtoLogRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoLogRequest other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoLogRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPath) {
          Path = other.Path;
        }
        if (other.HasFrom) {
          From = other.From;
        }
        if (other.HasTo) {
          To = other.To;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoLogRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoLogRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 26: {
              result.hasPath = input.ReadString(ref result.path_);
              break;
            }
            case 32: {
              result.hasFrom = input.ReadInt32(ref result.from_);
              break;
            }
            case 40: {
              result.hasTo = input.ReadInt32(ref result.to_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPath {
        get { return result.hasPath; }
      }
      public string Path {
        get { return result.Path; }
        set { SetPath(value); }
      }
      public Builder SetPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPath = true;
        result.path_ = value;
        return this;
      }
      public Builder ClearPath() {
        PrepareBuilder();
        result.hasPath = false;
        result.path_ = "";
        return this;
      }
      
      public bool HasFrom {
        get { return result.hasFrom; }
      }
      public int From {
        get { return result.From; }
        set { SetFrom(value); }
      }
      public Builder SetFrom(int value) {
        PrepareBuilder();
        result.hasFrom = true;
        result.from_ = value;
        return this;
      }
      public Builder ClearFrom() {
        PrepareBuilder();
        result.hasFrom = false;
        result.from_ = 0;
        return this;
      }
      
      public bool HasTo {
        get { return result.hasTo; }
      }
      public int To {
        get { return result.To; }
        set { SetTo(value); }
      }
      public Builder SetTo(int value) {
        PrepareBuilder();
        result.hasTo = true;
        result.to_ = value;
        return this;
      }
      public Builder ClearTo() {
        PrepareBuilder();
        result.hasTo = false;
        result.to_ = 0;
        return this;
      }
    }
    static ProtoLogRequest() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoTaskRequest : pb::GeneratedMessage<ProtoTaskRequest, ProtoTaskRequest.Builder> {
    private ProtoTaskRequest() { }
    private static readonly ProtoTaskRequest defaultInstance = new ProtoTaskRequest().MakeReadOnly();
    private static readonly string[] _protoTaskRequestFieldNames = new string[] { "argument", "taskName" };
    private static readonly uint[] _protoTaskRequestFieldTags = new uint[] { 34, 26 };
    public static ProtoTaskRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoTaskRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoTaskRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoTaskRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoTaskRequest, ProtoTaskRequest.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoTaskRequest__FieldAccessorTable; }
    }
    
    public const int TaskNameFieldNumber = 3;
    private bool hasTaskName;
    private string taskName_ = "";
    public bool HasTaskName {
      get { return hasTaskName; }
    }
    public string TaskName {
      get { return taskName_; }
    }
    
    public const int ArgumentFieldNumber = 4;
    private bool hasArgument;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper argument_;
    public bool HasArgument {
      get { return hasArgument; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Argument {
      get { return argument_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTaskName) return false;
        if (!hasArgument) return false;
        if (!Argument.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoTaskRequestFieldNames;
      if (hasTaskName) {
        output.WriteString(3, field_names[1], TaskName);
      }
      if (hasArgument) {
        output.WriteMessage(4, field_names[0], Argument);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTaskName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, TaskName);
        }
        if (hasArgument) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Argument);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoTaskRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTaskRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTaskRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTaskRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTaskRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTaskRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoTaskRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoTaskRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoTaskRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTaskRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoTaskRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoTaskRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoTaskRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoTaskRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoTaskRequest result;
      
      private ProtoTaskRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoTaskRequest original = result;
          result = new ProtoTaskRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoTaskRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoTaskRequest.Descriptor; }
      }
      
      public override ProtoTaskRequest DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoTaskRequest.DefaultInstance; }
      }
      
      public override ProtoTaskRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoTaskRequest) {
          return MergeFrom((ProtoTaskRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoTaskRequest other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoTaskRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTaskName) {
          TaskName = other.TaskName;
        }
        if (other.HasArgument) {
          MergeArgument(other.Argument);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoTaskRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoTaskRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 26: {
              result.hasTaskName = input.ReadString(ref result.taskName_);
              break;
            }
            case 34: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasArgument) {
                subBuilder.MergeFrom(Argument);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Argument = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTaskName {
        get { return result.hasTaskName; }
      }
      public string TaskName {
        get { return result.TaskName; }
        set { SetTaskName(value); }
      }
      public Builder SetTaskName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTaskName = true;
        result.taskName_ = value;
        return this;
      }
      public Builder ClearTaskName() {
        PrepareBuilder();
        result.hasTaskName = false;
        result.taskName_ = "";
        return this;
      }
      
      public bool HasArgument {
       get { return result.hasArgument; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Argument {
        get { return result.Argument; }
        set { SetArgument(value); }
      }
      public Builder SetArgument(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasArgument = true;
        result.argument_ = value;
        return this;
      }
      public Builder SetArgument(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasArgument = true;
        result.argument_ = builderForValue.Build();
        return this;
      }
      public Builder MergeArgument(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasArgument &&
            result.argument_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.argument_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.argument_).MergeFrom(value).BuildPartial();
        } else {
          result.argument_ = value;
        }
        result.hasArgument = true;
        return this;
      }
      public Builder ClearArgument() {
        PrepareBuilder();
        result.hasArgument = false;
        result.argument_ = null;
        return this;
      }
    }
    static ProtoTaskRequest() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoTopologyRequest : pb::GeneratedMessage<ProtoTopologyRequest, ProtoTopologyRequest.Builder> {
    private ProtoTopologyRequest() { }
    private static readonly ProtoTopologyRequest defaultInstance = new ProtoTopologyRequest().MakeReadOnly();
    private static readonly string[] _protoTopologyRequestFieldNames = new string[] { "includeAttributes", "includeMetrics", "nodeId", "nodeIp" };
    private static readonly uint[] _protoTopologyRequestFieldTags = new uint[] { 24, 32, 42, 50 };
    public static ProtoTopologyRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoTopologyRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoTopologyRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoTopologyRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoTopologyRequest, ProtoTopologyRequest.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoTopologyRequest__FieldAccessorTable; }
    }
    
    public const int IncludeAttributesFieldNumber = 3;
    private bool hasIncludeAttributes;
    private bool includeAttributes_;
    public bool HasIncludeAttributes {
      get { return hasIncludeAttributes; }
    }
    public bool IncludeAttributes {
      get { return includeAttributes_; }
    }
    
    public const int IncludeMetricsFieldNumber = 4;
    private bool hasIncludeMetrics;
    private bool includeMetrics_;
    public bool HasIncludeMetrics {
      get { return hasIncludeMetrics; }
    }
    public bool IncludeMetrics {
      get { return includeMetrics_; }
    }
    
    public const int NodeIdFieldNumber = 5;
    private bool hasNodeId;
    private string nodeId_ = "";
    public bool HasNodeId {
      get { return hasNodeId; }
    }
    public string NodeId {
      get { return nodeId_; }
    }
    
    public const int NodeIpFieldNumber = 6;
    private bool hasNodeIp;
    private string nodeIp_ = "";
    public bool HasNodeIp {
      get { return hasNodeIp; }
    }
    public string NodeIp {
      get { return nodeIp_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIncludeAttributes) return false;
        if (!hasIncludeMetrics) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoTopologyRequestFieldNames;
      if (hasIncludeAttributes) {
        output.WriteBool(3, field_names[0], IncludeAttributes);
      }
      if (hasIncludeMetrics) {
        output.WriteBool(4, field_names[1], IncludeMetrics);
      }
      if (hasNodeId) {
        output.WriteString(5, field_names[2], NodeId);
      }
      if (hasNodeIp) {
        output.WriteString(6, field_names[3], NodeIp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIncludeAttributes) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IncludeAttributes);
        }
        if (hasIncludeMetrics) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, IncludeMetrics);
        }
        if (hasNodeId) {
          size += pb::CodedOutputStream.ComputeStringSize(5, NodeId);
        }
        if (hasNodeIp) {
          size += pb::CodedOutputStream.ComputeStringSize(6, NodeIp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoTopologyRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTopologyRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTopologyRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTopologyRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTopologyRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTopologyRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoTopologyRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoTopologyRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoTopologyRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTopologyRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoTopologyRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoTopologyRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoTopologyRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoTopologyRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoTopologyRequest result;
      
      private ProtoTopologyRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoTopologyRequest original = result;
          result = new ProtoTopologyRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoTopologyRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoTopologyRequest.Descriptor; }
      }
      
      public override ProtoTopologyRequest DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoTopologyRequest.DefaultInstance; }
      }
      
      public override ProtoTopologyRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoTopologyRequest) {
          return MergeFrom((ProtoTopologyRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoTopologyRequest other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoTopologyRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIncludeAttributes) {
          IncludeAttributes = other.IncludeAttributes;
        }
        if (other.HasIncludeMetrics) {
          IncludeMetrics = other.IncludeMetrics;
        }
        if (other.HasNodeId) {
          NodeId = other.NodeId;
        }
        if (other.HasNodeIp) {
          NodeIp = other.NodeIp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoTopologyRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoTopologyRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 24: {
              result.hasIncludeAttributes = input.ReadBool(ref result.includeAttributes_);
              break;
            }
            case 32: {
              result.hasIncludeMetrics = input.ReadBool(ref result.includeMetrics_);
              break;
            }
            case 42: {
              result.hasNodeId = input.ReadString(ref result.nodeId_);
              break;
            }
            case 50: {
              result.hasNodeIp = input.ReadString(ref result.nodeIp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIncludeAttributes {
        get { return result.hasIncludeAttributes; }
      }
      public bool IncludeAttributes {
        get { return result.IncludeAttributes; }
        set { SetIncludeAttributes(value); }
      }
      public Builder SetIncludeAttributes(bool value) {
        PrepareBuilder();
        result.hasIncludeAttributes = true;
        result.includeAttributes_ = value;
        return this;
      }
      public Builder ClearIncludeAttributes() {
        PrepareBuilder();
        result.hasIncludeAttributes = false;
        result.includeAttributes_ = false;
        return this;
      }
      
      public bool HasIncludeMetrics {
        get { return result.hasIncludeMetrics; }
      }
      public bool IncludeMetrics {
        get { return result.IncludeMetrics; }
        set { SetIncludeMetrics(value); }
      }
      public Builder SetIncludeMetrics(bool value) {
        PrepareBuilder();
        result.hasIncludeMetrics = true;
        result.includeMetrics_ = value;
        return this;
      }
      public Builder ClearIncludeMetrics() {
        PrepareBuilder();
        result.hasIncludeMetrics = false;
        result.includeMetrics_ = false;
        return this;
      }
      
      public bool HasNodeId {
        get { return result.hasNodeId; }
      }
      public string NodeId {
        get { return result.NodeId; }
        set { SetNodeId(value); }
      }
      public Builder SetNodeId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNodeId = true;
        result.nodeId_ = value;
        return this;
      }
      public Builder ClearNodeId() {
        PrepareBuilder();
        result.hasNodeId = false;
        result.nodeId_ = "";
        return this;
      }
      
      public bool HasNodeIp {
        get { return result.hasNodeIp; }
      }
      public string NodeIp {
        get { return result.NodeIp; }
        set { SetNodeIp(value); }
      }
      public Builder SetNodeIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNodeIp = true;
        result.nodeIp_ = value;
        return this;
      }
      public Builder ClearNodeIp() {
        PrepareBuilder();
        result.hasNodeIp = false;
        result.nodeIp_ = "";
        return this;
      }
    }
    static ProtoTopologyRequest() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoResponse : pb::GeneratedMessage<ProtoResponse, ProtoResponse.Builder> {
    private ProtoResponse() { }
    private static readonly ProtoResponse defaultInstance = new ProtoResponse().MakeReadOnly();
    private static readonly string[] _protoResponseFieldNames = new string[] { "clientId", "errorMessage", "requestId", "result", "sessionToken", "status" };
    private static readonly uint[] _protoResponseFieldTags = new uint[] { 18, 34, 8, 42, 50, 24 };
    public static ProtoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoResponse, ProtoResponse.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoResponse__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private long requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    public long RequestId {
      get { return requestId_; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private pb::ByteString clientId_ = pb::ByteString.Empty;
    public bool HasClientId {
      get { return hasClientId; }
    }
    public pb::ByteString ClientId {
      get { return clientId_; }
    }
    
    public const int StatusFieldNumber = 3;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public const int ErrorMessageFieldNumber = 4;
    private bool hasErrorMessage;
    private string errorMessage_ = "";
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return errorMessage_; }
    }
    
    public const int ResultFieldNumber = 5;
    private bool hasResult;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Result {
      get { return result_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public const int SessionTokenFieldNumber = 6;
    private bool hasSessionToken;
    private pb::ByteString sessionToken_ = pb::ByteString.Empty;
    public bool HasSessionToken {
      get { return hasSessionToken; }
    }
    public pb::ByteString SessionToken {
      get { return sessionToken_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestId) return false;
        if (!hasClientId) return false;
        if (!hasStatus) return false;
        if (HasResult) {
          if (!Result.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoResponseFieldNames;
      if (hasRequestId) {
        output.WriteInt64(1, field_names[2], RequestId);
      }
      if (hasClientId) {
        output.WriteBytes(2, field_names[0], ClientId);
      }
      if (hasStatus) {
        output.WriteInt32(3, field_names[5], Status);
      }
      if (hasErrorMessage) {
        output.WriteString(4, field_names[1], ErrorMessage);
      }
      if (hasResult) {
        output.WriteMessage(5, field_names[3], Result);
      }
      if (hasSessionToken) {
        output.WriteBytes(6, field_names[4], SessionToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, RequestId);
        }
        if (hasClientId) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, ClientId);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Status);
        }
        if (hasErrorMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(4, ErrorMessage);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Result);
        }
        if (hasSessionToken) {
          size += pb::CodedOutputStream.ComputeBytesSize(6, SessionToken);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoResponse result;
      
      private ProtoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoResponse original = result;
          result = new ProtoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoResponse.Descriptor; }
      }
      
      public override ProtoResponse DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoResponse.DefaultInstance; }
      }
      
      public override ProtoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoResponse) {
          return MergeFrom((ProtoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoResponse other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasErrorMessage) {
          ErrorMessage = other.ErrorMessage;
        }
        if (other.HasResult) {
          MergeResult(other.Result);
        }
        if (other.HasSessionToken) {
          SessionToken = other.SessionToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestId = input.ReadInt64(ref result.requestId_);
              break;
            }
            case 18: {
              result.hasClientId = input.ReadBytes(ref result.clientId_);
              break;
            }
            case 24: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
            case 34: {
              result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
              break;
            }
            case 42: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasResult) {
                subBuilder.MergeFrom(Result);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Result = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              result.hasSessionToken = input.ReadBytes(ref result.sessionToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      public long RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      public Builder SetRequestId(long value) {
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = 0L;
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public pb::ByteString ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasErrorMessage {
        get { return result.hasErrorMessage; }
      }
      public string ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = "";
        return this;
      }
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder SetResult(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResult(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResult &&
            result.result_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.result_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.result_).MergeFrom(value).BuildPartial();
        } else {
          result.result_ = value;
        }
        result.hasResult = true;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = null;
        return this;
      }
      
      public bool HasSessionToken {
        get { return result.hasSessionToken; }
      }
      public pb::ByteString SessionToken {
        get { return result.SessionToken; }
        set { SetSessionToken(value); }
      }
      public Builder SetSessionToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionToken = true;
        result.sessionToken_ = value;
        return this;
      }
      public Builder ClearSessionToken() {
        PrepareBuilder();
        result.hasSessionToken = false;
        result.sessionToken_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ProtoResponse() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoTaskBean : pb::GeneratedMessage<ProtoTaskBean, ProtoTaskBean.Builder> {
    private ProtoTaskBean() { }
    private static readonly ProtoTaskBean defaultInstance = new ProtoTaskBean().MakeReadOnly();
    private static readonly string[] _protoTaskBeanFieldNames = new string[] { "error", "finished", "id", "result" };
    private static readonly uint[] _protoTaskBeanFieldTags = new uint[] { 42, 24, 18, 34 };
    public static ProtoTaskBean DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoTaskBean DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoTaskBean ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoTaskBean__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoTaskBean, ProtoTaskBean.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoTaskBean__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 2;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int FinishedFieldNumber = 3;
    private bool hasFinished;
    private bool finished_;
    public bool HasFinished {
      get { return hasFinished; }
    }
    public bool Finished {
      get { return finished_; }
    }
    
    public const int ResultFieldNumber = 4;
    private bool hasResult;
    private global::GridGain.Client.Impl.Protobuf.ObjectWrapper result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Result {
      get { return result_ ?? global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance; }
    }
    
    public const int ErrorFieldNumber = 5;
    private bool hasError;
    private string error_ = "";
    public bool HasError {
      get { return hasError; }
    }
    public string Error {
      get { return error_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasFinished) return false;
        if (HasResult) {
          if (!Result.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoTaskBeanFieldNames;
      if (hasId) {
        output.WriteString(2, field_names[2], Id);
      }
      if (hasFinished) {
        output.WriteBool(3, field_names[1], Finished);
      }
      if (hasResult) {
        output.WriteMessage(4, field_names[3], Result);
      }
      if (hasError) {
        output.WriteString(5, field_names[0], Error);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Id);
        }
        if (hasFinished) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, Finished);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Result);
        }
        if (hasError) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Error);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoTaskBean ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTaskBean ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTaskBean ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTaskBean ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTaskBean ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTaskBean ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoTaskBean ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoTaskBean ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoTaskBean ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTaskBean ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoTaskBean MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoTaskBean prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoTaskBean, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoTaskBean cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoTaskBean result;
      
      private ProtoTaskBean PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoTaskBean original = result;
          result = new ProtoTaskBean();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoTaskBean MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoTaskBean.Descriptor; }
      }
      
      public override ProtoTaskBean DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoTaskBean.DefaultInstance; }
      }
      
      public override ProtoTaskBean BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoTaskBean) {
          return MergeFrom((ProtoTaskBean) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoTaskBean other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoTaskBean.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasFinished) {
          Finished = other.Finished;
        }
        if (other.HasResult) {
          MergeResult(other.Result);
        }
        if (other.HasError) {
          Error = other.Error;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoTaskBeanFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoTaskBeanFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 24: {
              result.hasFinished = input.ReadBool(ref result.finished_);
              break;
            }
            case 34: {
              global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder();
              if (result.hasResult) {
                subBuilder.MergeFrom(Result);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Result = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              result.hasError = input.ReadString(ref result.error_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasFinished {
        get { return result.hasFinished; }
      }
      public bool Finished {
        get { return result.Finished; }
        set { SetFinished(value); }
      }
      public Builder SetFinished(bool value) {
        PrepareBuilder();
        result.hasFinished = true;
        result.finished_ = value;
        return this;
      }
      public Builder ClearFinished() {
        PrepareBuilder();
        result.hasFinished = false;
        result.finished_ = false;
        return this;
      }
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::GridGain.Client.Impl.Protobuf.ObjectWrapper Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder SetResult(global::GridGain.Client.Impl.Protobuf.ObjectWrapper.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResult(global::GridGain.Client.Impl.Protobuf.ObjectWrapper value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResult &&
            result.result_ != global::GridGain.Client.Impl.Protobuf.ObjectWrapper.DefaultInstance) {
            result.result_ = global::GridGain.Client.Impl.Protobuf.ObjectWrapper.CreateBuilder(result.result_).MergeFrom(value).BuildPartial();
        } else {
          result.result_ = value;
        }
        result.hasResult = true;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = null;
        return this;
      }
      
      public bool HasError {
        get { return result.hasError; }
      }
      public string Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = "";
        return this;
      }
    }
    static ProtoTaskBean() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoNodeMetricsBean : pb::GeneratedMessage<ProtoNodeMetricsBean, ProtoNodeMetricsBean.Builder> {
    private ProtoNodeMetricsBean() { }
    private static readonly ProtoNodeMetricsBean defaultInstance = new ProtoNodeMetricsBean().MakeReadOnly();
    private static readonly string[] _protoNodeMetricsBeanFieldNames = new string[] { "averageActiveJobs", "averageCancelledJobs", "averageCpuLoad", "averageJobExecuteTime", "averageJobWaitTime", "averageRejectedJobs", "averageWaitingJobs", "currentActiveJobs", "currentCancelledJobs", "currentCpuLoad", "currentDaemonThreadCount", "currentIdleTime", "currentJobExecuteTime", "currentJobWaitTime", "currentRejectedJobs", "currentThreadCount", "currentWaitingJobs", "fileSystemFreeSpace", "fileSystemTotalSpace", "fileSystemUsableSpace", "heapMemoryCommitted", "heapMemoryInitialized", "heapMemoryMaximum", "heapMemoryUsed", "lastDataVersion", "lastUpdateTime", "maximumActiveJobs", "maximumCancelledJobs", "maximumJobExecuteTime", "maximumJobWaitTime", "maximumRejectedJobs", "maximumThreadCount", "maximumWaitingJobs", "nodeStartTime", "nonHeapMemoryCommitted", "nonHeapMemoryInitialized", "nonHeapMemoryMaximum", "nonHeapMemoryUsed", "startTime", "totalCancelledJobs", "totalCpus", "totalExecutedJobs", "totalIdleTime", "totalRejectedJobs", "totalStartedThreadCount", "upTime" };
    private static readonly uint[] _protoNodeMetricsBeanFieldTags = new uint[] { 37, 109, 217, 177, 153, 85, 61, 24, 96, 209, 336, 192, 168, 144, 72, 312, 48, 344, 352, 360, 240, 224, 248, 232, 368, 8, 16, 88, 160, 136, 64, 320, 40, 304, 272, 256, 280, 264, 296, 120, 200, 128, 184, 112, 328, 288 };
    public static ProtoNodeMetricsBean DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoNodeMetricsBean DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoNodeMetricsBean ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoNodeMetricsBean__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoNodeMetricsBean, ProtoNodeMetricsBean.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoNodeMetricsBean__FieldAccessorTable; }
    }
    
    public const int LastUpdateTimeFieldNumber = 1;
    private bool hasLastUpdateTime;
    private long lastUpdateTime_ = -1L;
    public bool HasLastUpdateTime {
      get { return hasLastUpdateTime; }
    }
    public long LastUpdateTime {
      get { return lastUpdateTime_; }
    }
    
    public const int MaximumActiveJobsFieldNumber = 2;
    private bool hasMaximumActiveJobs;
    private int maximumActiveJobs_ = -1;
    public bool HasMaximumActiveJobs {
      get { return hasMaximumActiveJobs; }
    }
    public int MaximumActiveJobs {
      get { return maximumActiveJobs_; }
    }
    
    public const int CurrentActiveJobsFieldNumber = 3;
    private bool hasCurrentActiveJobs;
    private int currentActiveJobs_ = -1;
    public bool HasCurrentActiveJobs {
      get { return hasCurrentActiveJobs; }
    }
    public int CurrentActiveJobs {
      get { return currentActiveJobs_; }
    }
    
    public const int AverageActiveJobsFieldNumber = 4;
    private bool hasAverageActiveJobs;
    private float averageActiveJobs_ = -1F;
    public bool HasAverageActiveJobs {
      get { return hasAverageActiveJobs; }
    }
    public float AverageActiveJobs {
      get { return averageActiveJobs_; }
    }
    
    public const int MaximumWaitingJobsFieldNumber = 5;
    private bool hasMaximumWaitingJobs;
    private int maximumWaitingJobs_ = -1;
    public bool HasMaximumWaitingJobs {
      get { return hasMaximumWaitingJobs; }
    }
    public int MaximumWaitingJobs {
      get { return maximumWaitingJobs_; }
    }
    
    public const int CurrentWaitingJobsFieldNumber = 6;
    private bool hasCurrentWaitingJobs;
    private int currentWaitingJobs_ = -1;
    public bool HasCurrentWaitingJobs {
      get { return hasCurrentWaitingJobs; }
    }
    public int CurrentWaitingJobs {
      get { return currentWaitingJobs_; }
    }
    
    public const int AverageWaitingJobsFieldNumber = 7;
    private bool hasAverageWaitingJobs;
    private float averageWaitingJobs_ = -1F;
    public bool HasAverageWaitingJobs {
      get { return hasAverageWaitingJobs; }
    }
    public float AverageWaitingJobs {
      get { return averageWaitingJobs_; }
    }
    
    public const int MaximumRejectedJobsFieldNumber = 8;
    private bool hasMaximumRejectedJobs;
    private int maximumRejectedJobs_ = -1;
    public bool HasMaximumRejectedJobs {
      get { return hasMaximumRejectedJobs; }
    }
    public int MaximumRejectedJobs {
      get { return maximumRejectedJobs_; }
    }
    
    public const int CurrentRejectedJobsFieldNumber = 9;
    private bool hasCurrentRejectedJobs;
    private int currentRejectedJobs_ = -1;
    public bool HasCurrentRejectedJobs {
      get { return hasCurrentRejectedJobs; }
    }
    public int CurrentRejectedJobs {
      get { return currentRejectedJobs_; }
    }
    
    public const int AverageRejectedJobsFieldNumber = 10;
    private bool hasAverageRejectedJobs;
    private float averageRejectedJobs_ = -1F;
    public bool HasAverageRejectedJobs {
      get { return hasAverageRejectedJobs; }
    }
    public float AverageRejectedJobs {
      get { return averageRejectedJobs_; }
    }
    
    public const int MaximumCancelledJobsFieldNumber = 11;
    private bool hasMaximumCancelledJobs;
    private int maximumCancelledJobs_ = -1;
    public bool HasMaximumCancelledJobs {
      get { return hasMaximumCancelledJobs; }
    }
    public int MaximumCancelledJobs {
      get { return maximumCancelledJobs_; }
    }
    
    public const int CurrentCancelledJobsFieldNumber = 12;
    private bool hasCurrentCancelledJobs;
    private int currentCancelledJobs_ = -1;
    public bool HasCurrentCancelledJobs {
      get { return hasCurrentCancelledJobs; }
    }
    public int CurrentCancelledJobs {
      get { return currentCancelledJobs_; }
    }
    
    public const int AverageCancelledJobsFieldNumber = 13;
    private bool hasAverageCancelledJobs;
    private float averageCancelledJobs_ = -1F;
    public bool HasAverageCancelledJobs {
      get { return hasAverageCancelledJobs; }
    }
    public float AverageCancelledJobs {
      get { return averageCancelledJobs_; }
    }
    
    public const int TotalRejectedJobsFieldNumber = 14;
    private bool hasTotalRejectedJobs;
    private int totalRejectedJobs_ = -1;
    public bool HasTotalRejectedJobs {
      get { return hasTotalRejectedJobs; }
    }
    public int TotalRejectedJobs {
      get { return totalRejectedJobs_; }
    }
    
    public const int TotalCancelledJobsFieldNumber = 15;
    private bool hasTotalCancelledJobs;
    private int totalCancelledJobs_ = -1;
    public bool HasTotalCancelledJobs {
      get { return hasTotalCancelledJobs; }
    }
    public int TotalCancelledJobs {
      get { return totalCancelledJobs_; }
    }
    
    public const int TotalExecutedJobsFieldNumber = 16;
    private bool hasTotalExecutedJobs;
    private int totalExecutedJobs_ = -1;
    public bool HasTotalExecutedJobs {
      get { return hasTotalExecutedJobs; }
    }
    public int TotalExecutedJobs {
      get { return totalExecutedJobs_; }
    }
    
    public const int MaximumJobWaitTimeFieldNumber = 17;
    private bool hasMaximumJobWaitTime;
    private long maximumJobWaitTime_ = -1L;
    public bool HasMaximumJobWaitTime {
      get { return hasMaximumJobWaitTime; }
    }
    public long MaximumJobWaitTime {
      get { return maximumJobWaitTime_; }
    }
    
    public const int CurrentJobWaitTimeFieldNumber = 18;
    private bool hasCurrentJobWaitTime;
    private long currentJobWaitTime_ = -1L;
    public bool HasCurrentJobWaitTime {
      get { return hasCurrentJobWaitTime; }
    }
    public long CurrentJobWaitTime {
      get { return currentJobWaitTime_; }
    }
    
    public const int AverageJobWaitTimeFieldNumber = 19;
    private bool hasAverageJobWaitTime;
    private double averageJobWaitTime_ = -1D;
    public bool HasAverageJobWaitTime {
      get { return hasAverageJobWaitTime; }
    }
    public double AverageJobWaitTime {
      get { return averageJobWaitTime_; }
    }
    
    public const int MaximumJobExecuteTimeFieldNumber = 20;
    private bool hasMaximumJobExecuteTime;
    private long maximumJobExecuteTime_ = -1L;
    public bool HasMaximumJobExecuteTime {
      get { return hasMaximumJobExecuteTime; }
    }
    public long MaximumJobExecuteTime {
      get { return maximumJobExecuteTime_; }
    }
    
    public const int CurrentJobExecuteTimeFieldNumber = 21;
    private bool hasCurrentJobExecuteTime;
    private long currentJobExecuteTime_ = -1L;
    public bool HasCurrentJobExecuteTime {
      get { return hasCurrentJobExecuteTime; }
    }
    public long CurrentJobExecuteTime {
      get { return currentJobExecuteTime_; }
    }
    
    public const int AverageJobExecuteTimeFieldNumber = 22;
    private bool hasAverageJobExecuteTime;
    private double averageJobExecuteTime_ = -1D;
    public bool HasAverageJobExecuteTime {
      get { return hasAverageJobExecuteTime; }
    }
    public double AverageJobExecuteTime {
      get { return averageJobExecuteTime_; }
    }
    
    public const int TotalIdleTimeFieldNumber = 23;
    private bool hasTotalIdleTime;
    private long totalIdleTime_ = -1L;
    public bool HasTotalIdleTime {
      get { return hasTotalIdleTime; }
    }
    public long TotalIdleTime {
      get { return totalIdleTime_; }
    }
    
    public const int CurrentIdleTimeFieldNumber = 24;
    private bool hasCurrentIdleTime;
    private long currentIdleTime_ = -1L;
    public bool HasCurrentIdleTime {
      get { return hasCurrentIdleTime; }
    }
    public long CurrentIdleTime {
      get { return currentIdleTime_; }
    }
    
    public const int TotalCpusFieldNumber = 25;
    private bool hasTotalCpus;
    private int totalCpus_ = -1;
    public bool HasTotalCpus {
      get { return hasTotalCpus; }
    }
    public int TotalCpus {
      get { return totalCpus_; }
    }
    
    public const int CurrentCpuLoadFieldNumber = 26;
    private bool hasCurrentCpuLoad;
    private double currentCpuLoad_ = -1D;
    public bool HasCurrentCpuLoad {
      get { return hasCurrentCpuLoad; }
    }
    public double CurrentCpuLoad {
      get { return currentCpuLoad_; }
    }
    
    public const int AverageCpuLoadFieldNumber = 27;
    private bool hasAverageCpuLoad;
    private double averageCpuLoad_ = -1D;
    public bool HasAverageCpuLoad {
      get { return hasAverageCpuLoad; }
    }
    public double AverageCpuLoad {
      get { return averageCpuLoad_; }
    }
    
    public const int HeapMemoryInitializedFieldNumber = 28;
    private bool hasHeapMemoryInitialized;
    private long heapMemoryInitialized_ = -1L;
    public bool HasHeapMemoryInitialized {
      get { return hasHeapMemoryInitialized; }
    }
    public long HeapMemoryInitialized {
      get { return heapMemoryInitialized_; }
    }
    
    public const int HeapMemoryUsedFieldNumber = 29;
    private bool hasHeapMemoryUsed;
    private long heapMemoryUsed_ = -1L;
    public bool HasHeapMemoryUsed {
      get { return hasHeapMemoryUsed; }
    }
    public long HeapMemoryUsed {
      get { return heapMemoryUsed_; }
    }
    
    public const int HeapMemoryCommittedFieldNumber = 30;
    private bool hasHeapMemoryCommitted;
    private long heapMemoryCommitted_ = -1L;
    public bool HasHeapMemoryCommitted {
      get { return hasHeapMemoryCommitted; }
    }
    public long HeapMemoryCommitted {
      get { return heapMemoryCommitted_; }
    }
    
    public const int HeapMemoryMaximumFieldNumber = 31;
    private bool hasHeapMemoryMaximum;
    private long heapMemoryMaximum_ = -1L;
    public bool HasHeapMemoryMaximum {
      get { return hasHeapMemoryMaximum; }
    }
    public long HeapMemoryMaximum {
      get { return heapMemoryMaximum_; }
    }
    
    public const int NonHeapMemoryInitializedFieldNumber = 32;
    private bool hasNonHeapMemoryInitialized;
    private long nonHeapMemoryInitialized_ = -1L;
    public bool HasNonHeapMemoryInitialized {
      get { return hasNonHeapMemoryInitialized; }
    }
    public long NonHeapMemoryInitialized {
      get { return nonHeapMemoryInitialized_; }
    }
    
    public const int NonHeapMemoryUsedFieldNumber = 33;
    private bool hasNonHeapMemoryUsed;
    private long nonHeapMemoryUsed_ = -1L;
    public bool HasNonHeapMemoryUsed {
      get { return hasNonHeapMemoryUsed; }
    }
    public long NonHeapMemoryUsed {
      get { return nonHeapMemoryUsed_; }
    }
    
    public const int NonHeapMemoryCommittedFieldNumber = 34;
    private bool hasNonHeapMemoryCommitted;
    private long nonHeapMemoryCommitted_ = -1L;
    public bool HasNonHeapMemoryCommitted {
      get { return hasNonHeapMemoryCommitted; }
    }
    public long NonHeapMemoryCommitted {
      get { return nonHeapMemoryCommitted_; }
    }
    
    public const int NonHeapMemoryMaximumFieldNumber = 35;
    private bool hasNonHeapMemoryMaximum;
    private long nonHeapMemoryMaximum_ = -1L;
    public bool HasNonHeapMemoryMaximum {
      get { return hasNonHeapMemoryMaximum; }
    }
    public long NonHeapMemoryMaximum {
      get { return nonHeapMemoryMaximum_; }
    }
    
    public const int UpTimeFieldNumber = 36;
    private bool hasUpTime;
    private long upTime_ = -1L;
    public bool HasUpTime {
      get { return hasUpTime; }
    }
    public long UpTime {
      get { return upTime_; }
    }
    
    public const int StartTimeFieldNumber = 37;
    private bool hasStartTime;
    private long startTime_ = -1L;
    public bool HasStartTime {
      get { return hasStartTime; }
    }
    public long StartTime {
      get { return startTime_; }
    }
    
    public const int NodeStartTimeFieldNumber = 38;
    private bool hasNodeStartTime;
    private long nodeStartTime_ = -1L;
    public bool HasNodeStartTime {
      get { return hasNodeStartTime; }
    }
    public long NodeStartTime {
      get { return nodeStartTime_; }
    }
    
    public const int CurrentThreadCountFieldNumber = 39;
    private bool hasCurrentThreadCount;
    private int currentThreadCount_ = -1;
    public bool HasCurrentThreadCount {
      get { return hasCurrentThreadCount; }
    }
    public int CurrentThreadCount {
      get { return currentThreadCount_; }
    }
    
    public const int MaximumThreadCountFieldNumber = 40;
    private bool hasMaximumThreadCount;
    private int maximumThreadCount_ = -1;
    public bool HasMaximumThreadCount {
      get { return hasMaximumThreadCount; }
    }
    public int MaximumThreadCount {
      get { return maximumThreadCount_; }
    }
    
    public const int TotalStartedThreadCountFieldNumber = 41;
    private bool hasTotalStartedThreadCount;
    private long totalStartedThreadCount_ = -1L;
    public bool HasTotalStartedThreadCount {
      get { return hasTotalStartedThreadCount; }
    }
    public long TotalStartedThreadCount {
      get { return totalStartedThreadCount_; }
    }
    
    public const int CurrentDaemonThreadCountFieldNumber = 42;
    private bool hasCurrentDaemonThreadCount;
    private int currentDaemonThreadCount_ = -1;
    public bool HasCurrentDaemonThreadCount {
      get { return hasCurrentDaemonThreadCount; }
    }
    public int CurrentDaemonThreadCount {
      get { return currentDaemonThreadCount_; }
    }
    
    public const int FileSystemFreeSpaceFieldNumber = 43;
    private bool hasFileSystemFreeSpace;
    private long fileSystemFreeSpace_ = -1L;
    public bool HasFileSystemFreeSpace {
      get { return hasFileSystemFreeSpace; }
    }
    public long FileSystemFreeSpace {
      get { return fileSystemFreeSpace_; }
    }
    
    public const int FileSystemTotalSpaceFieldNumber = 44;
    private bool hasFileSystemTotalSpace;
    private long fileSystemTotalSpace_ = -1L;
    public bool HasFileSystemTotalSpace {
      get { return hasFileSystemTotalSpace; }
    }
    public long FileSystemTotalSpace {
      get { return fileSystemTotalSpace_; }
    }
    
    public const int FileSystemUsableSpaceFieldNumber = 45;
    private bool hasFileSystemUsableSpace;
    private long fileSystemUsableSpace_ = -1L;
    public bool HasFileSystemUsableSpace {
      get { return hasFileSystemUsableSpace; }
    }
    public long FileSystemUsableSpace {
      get { return fileSystemUsableSpace_; }
    }
    
    public const int LastDataVersionFieldNumber = 46;
    private bool hasLastDataVersion;
    private long lastDataVersion_ = -1L;
    public bool HasLastDataVersion {
      get { return hasLastDataVersion; }
    }
    public long LastDataVersion {
      get { return lastDataVersion_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLastUpdateTime) return false;
        if (!hasMaximumActiveJobs) return false;
        if (!hasCurrentActiveJobs) return false;
        if (!hasAverageActiveJobs) return false;
        if (!hasMaximumWaitingJobs) return false;
        if (!hasCurrentWaitingJobs) return false;
        if (!hasAverageWaitingJobs) return false;
        if (!hasMaximumRejectedJobs) return false;
        if (!hasCurrentRejectedJobs) return false;
        if (!hasAverageRejectedJobs) return false;
        if (!hasMaximumCancelledJobs) return false;
        if (!hasCurrentCancelledJobs) return false;
        if (!hasAverageCancelledJobs) return false;
        if (!hasTotalRejectedJobs) return false;
        if (!hasTotalCancelledJobs) return false;
        if (!hasTotalExecutedJobs) return false;
        if (!hasMaximumJobWaitTime) return false;
        if (!hasCurrentJobWaitTime) return false;
        if (!hasAverageJobWaitTime) return false;
        if (!hasMaximumJobExecuteTime) return false;
        if (!hasCurrentJobExecuteTime) return false;
        if (!hasAverageJobExecuteTime) return false;
        if (!hasTotalIdleTime) return false;
        if (!hasCurrentIdleTime) return false;
        if (!hasTotalCpus) return false;
        if (!hasCurrentCpuLoad) return false;
        if (!hasAverageCpuLoad) return false;
        if (!hasHeapMemoryInitialized) return false;
        if (!hasHeapMemoryUsed) return false;
        if (!hasHeapMemoryCommitted) return false;
        if (!hasHeapMemoryMaximum) return false;
        if (!hasNonHeapMemoryInitialized) return false;
        if (!hasNonHeapMemoryUsed) return false;
        if (!hasNonHeapMemoryCommitted) return false;
        if (!hasNonHeapMemoryMaximum) return false;
        if (!hasUpTime) return false;
        if (!hasStartTime) return false;
        if (!hasNodeStartTime) return false;
        if (!hasCurrentThreadCount) return false;
        if (!hasMaximumThreadCount) return false;
        if (!hasTotalStartedThreadCount) return false;
        if (!hasCurrentDaemonThreadCount) return false;
        if (!hasFileSystemFreeSpace) return false;
        if (!hasFileSystemTotalSpace) return false;
        if (!hasFileSystemUsableSpace) return false;
        if (!hasLastDataVersion) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoNodeMetricsBeanFieldNames;
      if (hasLastUpdateTime) {
        output.WriteInt64(1, field_names[25], LastUpdateTime);
      }
      if (hasMaximumActiveJobs) {
        output.WriteInt32(2, field_names[26], MaximumActiveJobs);
      }
      if (hasCurrentActiveJobs) {
        output.WriteInt32(3, field_names[7], CurrentActiveJobs);
      }
      if (hasAverageActiveJobs) {
        output.WriteFloat(4, field_names[0], AverageActiveJobs);
      }
      if (hasMaximumWaitingJobs) {
        output.WriteInt32(5, field_names[32], MaximumWaitingJobs);
      }
      if (hasCurrentWaitingJobs) {
        output.WriteInt32(6, field_names[16], CurrentWaitingJobs);
      }
      if (hasAverageWaitingJobs) {
        output.WriteFloat(7, field_names[6], AverageWaitingJobs);
      }
      if (hasMaximumRejectedJobs) {
        output.WriteInt32(8, field_names[30], MaximumRejectedJobs);
      }
      if (hasCurrentRejectedJobs) {
        output.WriteInt32(9, field_names[14], CurrentRejectedJobs);
      }
      if (hasAverageRejectedJobs) {
        output.WriteFloat(10, field_names[5], AverageRejectedJobs);
      }
      if (hasMaximumCancelledJobs) {
        output.WriteInt32(11, field_names[27], MaximumCancelledJobs);
      }
      if (hasCurrentCancelledJobs) {
        output.WriteInt32(12, field_names[8], CurrentCancelledJobs);
      }
      if (hasAverageCancelledJobs) {
        output.WriteFloat(13, field_names[1], AverageCancelledJobs);
      }
      if (hasTotalRejectedJobs) {
        output.WriteInt32(14, field_names[43], TotalRejectedJobs);
      }
      if (hasTotalCancelledJobs) {
        output.WriteInt32(15, field_names[39], TotalCancelledJobs);
      }
      if (hasTotalExecutedJobs) {
        output.WriteInt32(16, field_names[41], TotalExecutedJobs);
      }
      if (hasMaximumJobWaitTime) {
        output.WriteInt64(17, field_names[29], MaximumJobWaitTime);
      }
      if (hasCurrentJobWaitTime) {
        output.WriteInt64(18, field_names[13], CurrentJobWaitTime);
      }
      if (hasAverageJobWaitTime) {
        output.WriteDouble(19, field_names[4], AverageJobWaitTime);
      }
      if (hasMaximumJobExecuteTime) {
        output.WriteInt64(20, field_names[28], MaximumJobExecuteTime);
      }
      if (hasCurrentJobExecuteTime) {
        output.WriteInt64(21, field_names[12], CurrentJobExecuteTime);
      }
      if (hasAverageJobExecuteTime) {
        output.WriteDouble(22, field_names[3], AverageJobExecuteTime);
      }
      if (hasTotalIdleTime) {
        output.WriteInt64(23, field_names[42], TotalIdleTime);
      }
      if (hasCurrentIdleTime) {
        output.WriteInt64(24, field_names[11], CurrentIdleTime);
      }
      if (hasTotalCpus) {
        output.WriteInt32(25, field_names[40], TotalCpus);
      }
      if (hasCurrentCpuLoad) {
        output.WriteDouble(26, field_names[9], CurrentCpuLoad);
      }
      if (hasAverageCpuLoad) {
        output.WriteDouble(27, field_names[2], AverageCpuLoad);
      }
      if (hasHeapMemoryInitialized) {
        output.WriteInt64(28, field_names[21], HeapMemoryInitialized);
      }
      if (hasHeapMemoryUsed) {
        output.WriteInt64(29, field_names[23], HeapMemoryUsed);
      }
      if (hasHeapMemoryCommitted) {
        output.WriteInt64(30, field_names[20], HeapMemoryCommitted);
      }
      if (hasHeapMemoryMaximum) {
        output.WriteInt64(31, field_names[22], HeapMemoryMaximum);
      }
      if (hasNonHeapMemoryInitialized) {
        output.WriteInt64(32, field_names[35], NonHeapMemoryInitialized);
      }
      if (hasNonHeapMemoryUsed) {
        output.WriteInt64(33, field_names[37], NonHeapMemoryUsed);
      }
      if (hasNonHeapMemoryCommitted) {
        output.WriteInt64(34, field_names[34], NonHeapMemoryCommitted);
      }
      if (hasNonHeapMemoryMaximum) {
        output.WriteInt64(35, field_names[36], NonHeapMemoryMaximum);
      }
      if (hasUpTime) {
        output.WriteInt64(36, field_names[45], UpTime);
      }
      if (hasStartTime) {
        output.WriteInt64(37, field_names[38], StartTime);
      }
      if (hasNodeStartTime) {
        output.WriteInt64(38, field_names[33], NodeStartTime);
      }
      if (hasCurrentThreadCount) {
        output.WriteInt32(39, field_names[15], CurrentThreadCount);
      }
      if (hasMaximumThreadCount) {
        output.WriteInt32(40, field_names[31], MaximumThreadCount);
      }
      if (hasTotalStartedThreadCount) {
        output.WriteInt64(41, field_names[44], TotalStartedThreadCount);
      }
      if (hasCurrentDaemonThreadCount) {
        output.WriteInt32(42, field_names[10], CurrentDaemonThreadCount);
      }
      if (hasFileSystemFreeSpace) {
        output.WriteInt64(43, field_names[17], FileSystemFreeSpace);
      }
      if (hasFileSystemTotalSpace) {
        output.WriteInt64(44, field_names[18], FileSystemTotalSpace);
      }
      if (hasFileSystemUsableSpace) {
        output.WriteInt64(45, field_names[19], FileSystemUsableSpace);
      }
      if (hasLastDataVersion) {
        output.WriteInt64(46, field_names[24], LastDataVersion);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLastUpdateTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, LastUpdateTime);
        }
        if (hasMaximumActiveJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, MaximumActiveJobs);
        }
        if (hasCurrentActiveJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, CurrentActiveJobs);
        }
        if (hasAverageActiveJobs) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, AverageActiveJobs);
        }
        if (hasMaximumWaitingJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, MaximumWaitingJobs);
        }
        if (hasCurrentWaitingJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, CurrentWaitingJobs);
        }
        if (hasAverageWaitingJobs) {
          size += pb::CodedOutputStream.ComputeFloatSize(7, AverageWaitingJobs);
        }
        if (hasMaximumRejectedJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, MaximumRejectedJobs);
        }
        if (hasCurrentRejectedJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, CurrentRejectedJobs);
        }
        if (hasAverageRejectedJobs) {
          size += pb::CodedOutputStream.ComputeFloatSize(10, AverageRejectedJobs);
        }
        if (hasMaximumCancelledJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, MaximumCancelledJobs);
        }
        if (hasCurrentCancelledJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, CurrentCancelledJobs);
        }
        if (hasAverageCancelledJobs) {
          size += pb::CodedOutputStream.ComputeFloatSize(13, AverageCancelledJobs);
        }
        if (hasTotalRejectedJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, TotalRejectedJobs);
        }
        if (hasTotalCancelledJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(15, TotalCancelledJobs);
        }
        if (hasTotalExecutedJobs) {
          size += pb::CodedOutputStream.ComputeInt32Size(16, TotalExecutedJobs);
        }
        if (hasMaximumJobWaitTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(17, MaximumJobWaitTime);
        }
        if (hasCurrentJobWaitTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(18, CurrentJobWaitTime);
        }
        if (hasAverageJobWaitTime) {
          size += pb::CodedOutputStream.ComputeDoubleSize(19, AverageJobWaitTime);
        }
        if (hasMaximumJobExecuteTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(20, MaximumJobExecuteTime);
        }
        if (hasCurrentJobExecuteTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(21, CurrentJobExecuteTime);
        }
        if (hasAverageJobExecuteTime) {
          size += pb::CodedOutputStream.ComputeDoubleSize(22, AverageJobExecuteTime);
        }
        if (hasTotalIdleTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(23, TotalIdleTime);
        }
        if (hasCurrentIdleTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(24, CurrentIdleTime);
        }
        if (hasTotalCpus) {
          size += pb::CodedOutputStream.ComputeInt32Size(25, TotalCpus);
        }
        if (hasCurrentCpuLoad) {
          size += pb::CodedOutputStream.ComputeDoubleSize(26, CurrentCpuLoad);
        }
        if (hasAverageCpuLoad) {
          size += pb::CodedOutputStream.ComputeDoubleSize(27, AverageCpuLoad);
        }
        if (hasHeapMemoryInitialized) {
          size += pb::CodedOutputStream.ComputeInt64Size(28, HeapMemoryInitialized);
        }
        if (hasHeapMemoryUsed) {
          size += pb::CodedOutputStream.ComputeInt64Size(29, HeapMemoryUsed);
        }
        if (hasHeapMemoryCommitted) {
          size += pb::CodedOutputStream.ComputeInt64Size(30, HeapMemoryCommitted);
        }
        if (hasHeapMemoryMaximum) {
          size += pb::CodedOutputStream.ComputeInt64Size(31, HeapMemoryMaximum);
        }
        if (hasNonHeapMemoryInitialized) {
          size += pb::CodedOutputStream.ComputeInt64Size(32, NonHeapMemoryInitialized);
        }
        if (hasNonHeapMemoryUsed) {
          size += pb::CodedOutputStream.ComputeInt64Size(33, NonHeapMemoryUsed);
        }
        if (hasNonHeapMemoryCommitted) {
          size += pb::CodedOutputStream.ComputeInt64Size(34, NonHeapMemoryCommitted);
        }
        if (hasNonHeapMemoryMaximum) {
          size += pb::CodedOutputStream.ComputeInt64Size(35, NonHeapMemoryMaximum);
        }
        if (hasUpTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(36, UpTime);
        }
        if (hasStartTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(37, StartTime);
        }
        if (hasNodeStartTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(38, NodeStartTime);
        }
        if (hasCurrentThreadCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(39, CurrentThreadCount);
        }
        if (hasMaximumThreadCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(40, MaximumThreadCount);
        }
        if (hasTotalStartedThreadCount) {
          size += pb::CodedOutputStream.ComputeInt64Size(41, TotalStartedThreadCount);
        }
        if (hasCurrentDaemonThreadCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(42, CurrentDaemonThreadCount);
        }
        if (hasFileSystemFreeSpace) {
          size += pb::CodedOutputStream.ComputeInt64Size(43, FileSystemFreeSpace);
        }
        if (hasFileSystemTotalSpace) {
          size += pb::CodedOutputStream.ComputeInt64Size(44, FileSystemTotalSpace);
        }
        if (hasFileSystemUsableSpace) {
          size += pb::CodedOutputStream.ComputeInt64Size(45, FileSystemUsableSpace);
        }
        if (hasLastDataVersion) {
          size += pb::CodedOutputStream.ComputeInt64Size(46, LastDataVersion);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoNodeMetricsBean ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoNodeMetricsBean ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoNodeMetricsBean MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoNodeMetricsBean prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoNodeMetricsBean, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoNodeMetricsBean cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoNodeMetricsBean result;
      
      private ProtoNodeMetricsBean PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoNodeMetricsBean original = result;
          result = new ProtoNodeMetricsBean();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoNodeMetricsBean MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.Descriptor; }
      }
      
      public override ProtoNodeMetricsBean DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.DefaultInstance; }
      }
      
      public override ProtoNodeMetricsBean BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoNodeMetricsBean) {
          return MergeFrom((ProtoNodeMetricsBean) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoNodeMetricsBean other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLastUpdateTime) {
          LastUpdateTime = other.LastUpdateTime;
        }
        if (other.HasMaximumActiveJobs) {
          MaximumActiveJobs = other.MaximumActiveJobs;
        }
        if (other.HasCurrentActiveJobs) {
          CurrentActiveJobs = other.CurrentActiveJobs;
        }
        if (other.HasAverageActiveJobs) {
          AverageActiveJobs = other.AverageActiveJobs;
        }
        if (other.HasMaximumWaitingJobs) {
          MaximumWaitingJobs = other.MaximumWaitingJobs;
        }
        if (other.HasCurrentWaitingJobs) {
          CurrentWaitingJobs = other.CurrentWaitingJobs;
        }
        if (other.HasAverageWaitingJobs) {
          AverageWaitingJobs = other.AverageWaitingJobs;
        }
        if (other.HasMaximumRejectedJobs) {
          MaximumRejectedJobs = other.MaximumRejectedJobs;
        }
        if (other.HasCurrentRejectedJobs) {
          CurrentRejectedJobs = other.CurrentRejectedJobs;
        }
        if (other.HasAverageRejectedJobs) {
          AverageRejectedJobs = other.AverageRejectedJobs;
        }
        if (other.HasMaximumCancelledJobs) {
          MaximumCancelledJobs = other.MaximumCancelledJobs;
        }
        if (other.HasCurrentCancelledJobs) {
          CurrentCancelledJobs = other.CurrentCancelledJobs;
        }
        if (other.HasAverageCancelledJobs) {
          AverageCancelledJobs = other.AverageCancelledJobs;
        }
        if (other.HasTotalRejectedJobs) {
          TotalRejectedJobs = other.TotalRejectedJobs;
        }
        if (other.HasTotalCancelledJobs) {
          TotalCancelledJobs = other.TotalCancelledJobs;
        }
        if (other.HasTotalExecutedJobs) {
          TotalExecutedJobs = other.TotalExecutedJobs;
        }
        if (other.HasMaximumJobWaitTime) {
          MaximumJobWaitTime = other.MaximumJobWaitTime;
        }
        if (other.HasCurrentJobWaitTime) {
          CurrentJobWaitTime = other.CurrentJobWaitTime;
        }
        if (other.HasAverageJobWaitTime) {
          AverageJobWaitTime = other.AverageJobWaitTime;
        }
        if (other.HasMaximumJobExecuteTime) {
          MaximumJobExecuteTime = other.MaximumJobExecuteTime;
        }
        if (other.HasCurrentJobExecuteTime) {
          CurrentJobExecuteTime = other.CurrentJobExecuteTime;
        }
        if (other.HasAverageJobExecuteTime) {
          AverageJobExecuteTime = other.AverageJobExecuteTime;
        }
        if (other.HasTotalIdleTime) {
          TotalIdleTime = other.TotalIdleTime;
        }
        if (other.HasCurrentIdleTime) {
          CurrentIdleTime = other.CurrentIdleTime;
        }
        if (other.HasTotalCpus) {
          TotalCpus = other.TotalCpus;
        }
        if (other.HasCurrentCpuLoad) {
          CurrentCpuLoad = other.CurrentCpuLoad;
        }
        if (other.HasAverageCpuLoad) {
          AverageCpuLoad = other.AverageCpuLoad;
        }
        if (other.HasHeapMemoryInitialized) {
          HeapMemoryInitialized = other.HeapMemoryInitialized;
        }
        if (other.HasHeapMemoryUsed) {
          HeapMemoryUsed = other.HeapMemoryUsed;
        }
        if (other.HasHeapMemoryCommitted) {
          HeapMemoryCommitted = other.HeapMemoryCommitted;
        }
        if (other.HasHeapMemoryMaximum) {
          HeapMemoryMaximum = other.HeapMemoryMaximum;
        }
        if (other.HasNonHeapMemoryInitialized) {
          NonHeapMemoryInitialized = other.NonHeapMemoryInitialized;
        }
        if (other.HasNonHeapMemoryUsed) {
          NonHeapMemoryUsed = other.NonHeapMemoryUsed;
        }
        if (other.HasNonHeapMemoryCommitted) {
          NonHeapMemoryCommitted = other.NonHeapMemoryCommitted;
        }
        if (other.HasNonHeapMemoryMaximum) {
          NonHeapMemoryMaximum = other.NonHeapMemoryMaximum;
        }
        if (other.HasUpTime) {
          UpTime = other.UpTime;
        }
        if (other.HasStartTime) {
          StartTime = other.StartTime;
        }
        if (other.HasNodeStartTime) {
          NodeStartTime = other.NodeStartTime;
        }
        if (other.HasCurrentThreadCount) {
          CurrentThreadCount = other.CurrentThreadCount;
        }
        if (other.HasMaximumThreadCount) {
          MaximumThreadCount = other.MaximumThreadCount;
        }
        if (other.HasTotalStartedThreadCount) {
          TotalStartedThreadCount = other.TotalStartedThreadCount;
        }
        if (other.HasCurrentDaemonThreadCount) {
          CurrentDaemonThreadCount = other.CurrentDaemonThreadCount;
        }
        if (other.HasFileSystemFreeSpace) {
          FileSystemFreeSpace = other.FileSystemFreeSpace;
        }
        if (other.HasFileSystemTotalSpace) {
          FileSystemTotalSpace = other.FileSystemTotalSpace;
        }
        if (other.HasFileSystemUsableSpace) {
          FileSystemUsableSpace = other.FileSystemUsableSpace;
        }
        if (other.HasLastDataVersion) {
          LastDataVersion = other.LastDataVersion;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoNodeMetricsBeanFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoNodeMetricsBeanFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasLastUpdateTime = input.ReadInt64(ref result.lastUpdateTime_);
              break;
            }
            case 16: {
              result.hasMaximumActiveJobs = input.ReadInt32(ref result.maximumActiveJobs_);
              break;
            }
            case 24: {
              result.hasCurrentActiveJobs = input.ReadInt32(ref result.currentActiveJobs_);
              break;
            }
            case 37: {
              result.hasAverageActiveJobs = input.ReadFloat(ref result.averageActiveJobs_);
              break;
            }
            case 40: {
              result.hasMaximumWaitingJobs = input.ReadInt32(ref result.maximumWaitingJobs_);
              break;
            }
            case 48: {
              result.hasCurrentWaitingJobs = input.ReadInt32(ref result.currentWaitingJobs_);
              break;
            }
            case 61: {
              result.hasAverageWaitingJobs = input.ReadFloat(ref result.averageWaitingJobs_);
              break;
            }
            case 64: {
              result.hasMaximumRejectedJobs = input.ReadInt32(ref result.maximumRejectedJobs_);
              break;
            }
            case 72: {
              result.hasCurrentRejectedJobs = input.ReadInt32(ref result.currentRejectedJobs_);
              break;
            }
            case 85: {
              result.hasAverageRejectedJobs = input.ReadFloat(ref result.averageRejectedJobs_);
              break;
            }
            case 88: {
              result.hasMaximumCancelledJobs = input.ReadInt32(ref result.maximumCancelledJobs_);
              break;
            }
            case 96: {
              result.hasCurrentCancelledJobs = input.ReadInt32(ref result.currentCancelledJobs_);
              break;
            }
            case 109: {
              result.hasAverageCancelledJobs = input.ReadFloat(ref result.averageCancelledJobs_);
              break;
            }
            case 112: {
              result.hasTotalRejectedJobs = input.ReadInt32(ref result.totalRejectedJobs_);
              break;
            }
            case 120: {
              result.hasTotalCancelledJobs = input.ReadInt32(ref result.totalCancelledJobs_);
              break;
            }
            case 128: {
              result.hasTotalExecutedJobs = input.ReadInt32(ref result.totalExecutedJobs_);
              break;
            }
            case 136: {
              result.hasMaximumJobWaitTime = input.ReadInt64(ref result.maximumJobWaitTime_);
              break;
            }
            case 144: {
              result.hasCurrentJobWaitTime = input.ReadInt64(ref result.currentJobWaitTime_);
              break;
            }
            case 153: {
              result.hasAverageJobWaitTime = input.ReadDouble(ref result.averageJobWaitTime_);
              break;
            }
            case 160: {
              result.hasMaximumJobExecuteTime = input.ReadInt64(ref result.maximumJobExecuteTime_);
              break;
            }
            case 168: {
              result.hasCurrentJobExecuteTime = input.ReadInt64(ref result.currentJobExecuteTime_);
              break;
            }
            case 177: {
              result.hasAverageJobExecuteTime = input.ReadDouble(ref result.averageJobExecuteTime_);
              break;
            }
            case 184: {
              result.hasTotalIdleTime = input.ReadInt64(ref result.totalIdleTime_);
              break;
            }
            case 192: {
              result.hasCurrentIdleTime = input.ReadInt64(ref result.currentIdleTime_);
              break;
            }
            case 200: {
              result.hasTotalCpus = input.ReadInt32(ref result.totalCpus_);
              break;
            }
            case 209: {
              result.hasCurrentCpuLoad = input.ReadDouble(ref result.currentCpuLoad_);
              break;
            }
            case 217: {
              result.hasAverageCpuLoad = input.ReadDouble(ref result.averageCpuLoad_);
              break;
            }
            case 224: {
              result.hasHeapMemoryInitialized = input.ReadInt64(ref result.heapMemoryInitialized_);
              break;
            }
            case 232: {
              result.hasHeapMemoryUsed = input.ReadInt64(ref result.heapMemoryUsed_);
              break;
            }
            case 240: {
              result.hasHeapMemoryCommitted = input.ReadInt64(ref result.heapMemoryCommitted_);
              break;
            }
            case 248: {
              result.hasHeapMemoryMaximum = input.ReadInt64(ref result.heapMemoryMaximum_);
              break;
            }
            case 256: {
              result.hasNonHeapMemoryInitialized = input.ReadInt64(ref result.nonHeapMemoryInitialized_);
              break;
            }
            case 264: {
              result.hasNonHeapMemoryUsed = input.ReadInt64(ref result.nonHeapMemoryUsed_);
              break;
            }
            case 272: {
              result.hasNonHeapMemoryCommitted = input.ReadInt64(ref result.nonHeapMemoryCommitted_);
              break;
            }
            case 280: {
              result.hasNonHeapMemoryMaximum = input.ReadInt64(ref result.nonHeapMemoryMaximum_);
              break;
            }
            case 288: {
              result.hasUpTime = input.ReadInt64(ref result.upTime_);
              break;
            }
            case 296: {
              result.hasStartTime = input.ReadInt64(ref result.startTime_);
              break;
            }
            case 304: {
              result.hasNodeStartTime = input.ReadInt64(ref result.nodeStartTime_);
              break;
            }
            case 312: {
              result.hasCurrentThreadCount = input.ReadInt32(ref result.currentThreadCount_);
              break;
            }
            case 320: {
              result.hasMaximumThreadCount = input.ReadInt32(ref result.maximumThreadCount_);
              break;
            }
            case 328: {
              result.hasTotalStartedThreadCount = input.ReadInt64(ref result.totalStartedThreadCount_);
              break;
            }
            case 336: {
              result.hasCurrentDaemonThreadCount = input.ReadInt32(ref result.currentDaemonThreadCount_);
              break;
            }
            case 344: {
              result.hasFileSystemFreeSpace = input.ReadInt64(ref result.fileSystemFreeSpace_);
              break;
            }
            case 352: {
              result.hasFileSystemTotalSpace = input.ReadInt64(ref result.fileSystemTotalSpace_);
              break;
            }
            case 360: {
              result.hasFileSystemUsableSpace = input.ReadInt64(ref result.fileSystemUsableSpace_);
              break;
            }
            case 368: {
              result.hasLastDataVersion = input.ReadInt64(ref result.lastDataVersion_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLastUpdateTime {
        get { return result.hasLastUpdateTime; }
      }
      public long LastUpdateTime {
        get { return result.LastUpdateTime; }
        set { SetLastUpdateTime(value); }
      }
      public Builder SetLastUpdateTime(long value) {
        PrepareBuilder();
        result.hasLastUpdateTime = true;
        result.lastUpdateTime_ = value;
        return this;
      }
      public Builder ClearLastUpdateTime() {
        PrepareBuilder();
        result.hasLastUpdateTime = false;
        result.lastUpdateTime_ = -1L;
        return this;
      }
      
      public bool HasMaximumActiveJobs {
        get { return result.hasMaximumActiveJobs; }
      }
      public int MaximumActiveJobs {
        get { return result.MaximumActiveJobs; }
        set { SetMaximumActiveJobs(value); }
      }
      public Builder SetMaximumActiveJobs(int value) {
        PrepareBuilder();
        result.hasMaximumActiveJobs = true;
        result.maximumActiveJobs_ = value;
        return this;
      }
      public Builder ClearMaximumActiveJobs() {
        PrepareBuilder();
        result.hasMaximumActiveJobs = false;
        result.maximumActiveJobs_ = -1;
        return this;
      }
      
      public bool HasCurrentActiveJobs {
        get { return result.hasCurrentActiveJobs; }
      }
      public int CurrentActiveJobs {
        get { return result.CurrentActiveJobs; }
        set { SetCurrentActiveJobs(value); }
      }
      public Builder SetCurrentActiveJobs(int value) {
        PrepareBuilder();
        result.hasCurrentActiveJobs = true;
        result.currentActiveJobs_ = value;
        return this;
      }
      public Builder ClearCurrentActiveJobs() {
        PrepareBuilder();
        result.hasCurrentActiveJobs = false;
        result.currentActiveJobs_ = -1;
        return this;
      }
      
      public bool HasAverageActiveJobs {
        get { return result.hasAverageActiveJobs; }
      }
      public float AverageActiveJobs {
        get { return result.AverageActiveJobs; }
        set { SetAverageActiveJobs(value); }
      }
      public Builder SetAverageActiveJobs(float value) {
        PrepareBuilder();
        result.hasAverageActiveJobs = true;
        result.averageActiveJobs_ = value;
        return this;
      }
      public Builder ClearAverageActiveJobs() {
        PrepareBuilder();
        result.hasAverageActiveJobs = false;
        result.averageActiveJobs_ = -1F;
        return this;
      }
      
      public bool HasMaximumWaitingJobs {
        get { return result.hasMaximumWaitingJobs; }
      }
      public int MaximumWaitingJobs {
        get { return result.MaximumWaitingJobs; }
        set { SetMaximumWaitingJobs(value); }
      }
      public Builder SetMaximumWaitingJobs(int value) {
        PrepareBuilder();
        result.hasMaximumWaitingJobs = true;
        result.maximumWaitingJobs_ = value;
        return this;
      }
      public Builder ClearMaximumWaitingJobs() {
        PrepareBuilder();
        result.hasMaximumWaitingJobs = false;
        result.maximumWaitingJobs_ = -1;
        return this;
      }
      
      public bool HasCurrentWaitingJobs {
        get { return result.hasCurrentWaitingJobs; }
      }
      public int CurrentWaitingJobs {
        get { return result.CurrentWaitingJobs; }
        set { SetCurrentWaitingJobs(value); }
      }
      public Builder SetCurrentWaitingJobs(int value) {
        PrepareBuilder();
        result.hasCurrentWaitingJobs = true;
        result.currentWaitingJobs_ = value;
        return this;
      }
      public Builder ClearCurrentWaitingJobs() {
        PrepareBuilder();
        result.hasCurrentWaitingJobs = false;
        result.currentWaitingJobs_ = -1;
        return this;
      }
      
      public bool HasAverageWaitingJobs {
        get { return result.hasAverageWaitingJobs; }
      }
      public float AverageWaitingJobs {
        get { return result.AverageWaitingJobs; }
        set { SetAverageWaitingJobs(value); }
      }
      public Builder SetAverageWaitingJobs(float value) {
        PrepareBuilder();
        result.hasAverageWaitingJobs = true;
        result.averageWaitingJobs_ = value;
        return this;
      }
      public Builder ClearAverageWaitingJobs() {
        PrepareBuilder();
        result.hasAverageWaitingJobs = false;
        result.averageWaitingJobs_ = -1F;
        return this;
      }
      
      public bool HasMaximumRejectedJobs {
        get { return result.hasMaximumRejectedJobs; }
      }
      public int MaximumRejectedJobs {
        get { return result.MaximumRejectedJobs; }
        set { SetMaximumRejectedJobs(value); }
      }
      public Builder SetMaximumRejectedJobs(int value) {
        PrepareBuilder();
        result.hasMaximumRejectedJobs = true;
        result.maximumRejectedJobs_ = value;
        return this;
      }
      public Builder ClearMaximumRejectedJobs() {
        PrepareBuilder();
        result.hasMaximumRejectedJobs = false;
        result.maximumRejectedJobs_ = -1;
        return this;
      }
      
      public bool HasCurrentRejectedJobs {
        get { return result.hasCurrentRejectedJobs; }
      }
      public int CurrentRejectedJobs {
        get { return result.CurrentRejectedJobs; }
        set { SetCurrentRejectedJobs(value); }
      }
      public Builder SetCurrentRejectedJobs(int value) {
        PrepareBuilder();
        result.hasCurrentRejectedJobs = true;
        result.currentRejectedJobs_ = value;
        return this;
      }
      public Builder ClearCurrentRejectedJobs() {
        PrepareBuilder();
        result.hasCurrentRejectedJobs = false;
        result.currentRejectedJobs_ = -1;
        return this;
      }
      
      public bool HasAverageRejectedJobs {
        get { return result.hasAverageRejectedJobs; }
      }
      public float AverageRejectedJobs {
        get { return result.AverageRejectedJobs; }
        set { SetAverageRejectedJobs(value); }
      }
      public Builder SetAverageRejectedJobs(float value) {
        PrepareBuilder();
        result.hasAverageRejectedJobs = true;
        result.averageRejectedJobs_ = value;
        return this;
      }
      public Builder ClearAverageRejectedJobs() {
        PrepareBuilder();
        result.hasAverageRejectedJobs = false;
        result.averageRejectedJobs_ = -1F;
        return this;
      }
      
      public bool HasMaximumCancelledJobs {
        get { return result.hasMaximumCancelledJobs; }
      }
      public int MaximumCancelledJobs {
        get { return result.MaximumCancelledJobs; }
        set { SetMaximumCancelledJobs(value); }
      }
      public Builder SetMaximumCancelledJobs(int value) {
        PrepareBuilder();
        result.hasMaximumCancelledJobs = true;
        result.maximumCancelledJobs_ = value;
        return this;
      }
      public Builder ClearMaximumCancelledJobs() {
        PrepareBuilder();
        result.hasMaximumCancelledJobs = false;
        result.maximumCancelledJobs_ = -1;
        return this;
      }
      
      public bool HasCurrentCancelledJobs {
        get { return result.hasCurrentCancelledJobs; }
      }
      public int CurrentCancelledJobs {
        get { return result.CurrentCancelledJobs; }
        set { SetCurrentCancelledJobs(value); }
      }
      public Builder SetCurrentCancelledJobs(int value) {
        PrepareBuilder();
        result.hasCurrentCancelledJobs = true;
        result.currentCancelledJobs_ = value;
        return this;
      }
      public Builder ClearCurrentCancelledJobs() {
        PrepareBuilder();
        result.hasCurrentCancelledJobs = false;
        result.currentCancelledJobs_ = -1;
        return this;
      }
      
      public bool HasAverageCancelledJobs {
        get { return result.hasAverageCancelledJobs; }
      }
      public float AverageCancelledJobs {
        get { return result.AverageCancelledJobs; }
        set { SetAverageCancelledJobs(value); }
      }
      public Builder SetAverageCancelledJobs(float value) {
        PrepareBuilder();
        result.hasAverageCancelledJobs = true;
        result.averageCancelledJobs_ = value;
        return this;
      }
      public Builder ClearAverageCancelledJobs() {
        PrepareBuilder();
        result.hasAverageCancelledJobs = false;
        result.averageCancelledJobs_ = -1F;
        return this;
      }
      
      public bool HasTotalRejectedJobs {
        get { return result.hasTotalRejectedJobs; }
      }
      public int TotalRejectedJobs {
        get { return result.TotalRejectedJobs; }
        set { SetTotalRejectedJobs(value); }
      }
      public Builder SetTotalRejectedJobs(int value) {
        PrepareBuilder();
        result.hasTotalRejectedJobs = true;
        result.totalRejectedJobs_ = value;
        return this;
      }
      public Builder ClearTotalRejectedJobs() {
        PrepareBuilder();
        result.hasTotalRejectedJobs = false;
        result.totalRejectedJobs_ = -1;
        return this;
      }
      
      public bool HasTotalCancelledJobs {
        get { return result.hasTotalCancelledJobs; }
      }
      public int TotalCancelledJobs {
        get { return result.TotalCancelledJobs; }
        set { SetTotalCancelledJobs(value); }
      }
      public Builder SetTotalCancelledJobs(int value) {
        PrepareBuilder();
        result.hasTotalCancelledJobs = true;
        result.totalCancelledJobs_ = value;
        return this;
      }
      public Builder ClearTotalCancelledJobs() {
        PrepareBuilder();
        result.hasTotalCancelledJobs = false;
        result.totalCancelledJobs_ = -1;
        return this;
      }
      
      public bool HasTotalExecutedJobs {
        get { return result.hasTotalExecutedJobs; }
      }
      public int TotalExecutedJobs {
        get { return result.TotalExecutedJobs; }
        set { SetTotalExecutedJobs(value); }
      }
      public Builder SetTotalExecutedJobs(int value) {
        PrepareBuilder();
        result.hasTotalExecutedJobs = true;
        result.totalExecutedJobs_ = value;
        return this;
      }
      public Builder ClearTotalExecutedJobs() {
        PrepareBuilder();
        result.hasTotalExecutedJobs = false;
        result.totalExecutedJobs_ = -1;
        return this;
      }
      
      public bool HasMaximumJobWaitTime {
        get { return result.hasMaximumJobWaitTime; }
      }
      public long MaximumJobWaitTime {
        get { return result.MaximumJobWaitTime; }
        set { SetMaximumJobWaitTime(value); }
      }
      public Builder SetMaximumJobWaitTime(long value) {
        PrepareBuilder();
        result.hasMaximumJobWaitTime = true;
        result.maximumJobWaitTime_ = value;
        return this;
      }
      public Builder ClearMaximumJobWaitTime() {
        PrepareBuilder();
        result.hasMaximumJobWaitTime = false;
        result.maximumJobWaitTime_ = -1L;
        return this;
      }
      
      public bool HasCurrentJobWaitTime {
        get { return result.hasCurrentJobWaitTime; }
      }
      public long CurrentJobWaitTime {
        get { return result.CurrentJobWaitTime; }
        set { SetCurrentJobWaitTime(value); }
      }
      public Builder SetCurrentJobWaitTime(long value) {
        PrepareBuilder();
        result.hasCurrentJobWaitTime = true;
        result.currentJobWaitTime_ = value;
        return this;
      }
      public Builder ClearCurrentJobWaitTime() {
        PrepareBuilder();
        result.hasCurrentJobWaitTime = false;
        result.currentJobWaitTime_ = -1L;
        return this;
      }
      
      public bool HasAverageJobWaitTime {
        get { return result.hasAverageJobWaitTime; }
      }
      public double AverageJobWaitTime {
        get { return result.AverageJobWaitTime; }
        set { SetAverageJobWaitTime(value); }
      }
      public Builder SetAverageJobWaitTime(double value) {
        PrepareBuilder();
        result.hasAverageJobWaitTime = true;
        result.averageJobWaitTime_ = value;
        return this;
      }
      public Builder ClearAverageJobWaitTime() {
        PrepareBuilder();
        result.hasAverageJobWaitTime = false;
        result.averageJobWaitTime_ = -1D;
        return this;
      }
      
      public bool HasMaximumJobExecuteTime {
        get { return result.hasMaximumJobExecuteTime; }
      }
      public long MaximumJobExecuteTime {
        get { return result.MaximumJobExecuteTime; }
        set { SetMaximumJobExecuteTime(value); }
      }
      public Builder SetMaximumJobExecuteTime(long value) {
        PrepareBuilder();
        result.hasMaximumJobExecuteTime = true;
        result.maximumJobExecuteTime_ = value;
        return this;
      }
      public Builder ClearMaximumJobExecuteTime() {
        PrepareBuilder();
        result.hasMaximumJobExecuteTime = false;
        result.maximumJobExecuteTime_ = -1L;
        return this;
      }
      
      public bool HasCurrentJobExecuteTime {
        get { return result.hasCurrentJobExecuteTime; }
      }
      public long CurrentJobExecuteTime {
        get { return result.CurrentJobExecuteTime; }
        set { SetCurrentJobExecuteTime(value); }
      }
      public Builder SetCurrentJobExecuteTime(long value) {
        PrepareBuilder();
        result.hasCurrentJobExecuteTime = true;
        result.currentJobExecuteTime_ = value;
        return this;
      }
      public Builder ClearCurrentJobExecuteTime() {
        PrepareBuilder();
        result.hasCurrentJobExecuteTime = false;
        result.currentJobExecuteTime_ = -1L;
        return this;
      }
      
      public bool HasAverageJobExecuteTime {
        get { return result.hasAverageJobExecuteTime; }
      }
      public double AverageJobExecuteTime {
        get { return result.AverageJobExecuteTime; }
        set { SetAverageJobExecuteTime(value); }
      }
      public Builder SetAverageJobExecuteTime(double value) {
        PrepareBuilder();
        result.hasAverageJobExecuteTime = true;
        result.averageJobExecuteTime_ = value;
        return this;
      }
      public Builder ClearAverageJobExecuteTime() {
        PrepareBuilder();
        result.hasAverageJobExecuteTime = false;
        result.averageJobExecuteTime_ = -1D;
        return this;
      }
      
      public bool HasTotalIdleTime {
        get { return result.hasTotalIdleTime; }
      }
      public long TotalIdleTime {
        get { return result.TotalIdleTime; }
        set { SetTotalIdleTime(value); }
      }
      public Builder SetTotalIdleTime(long value) {
        PrepareBuilder();
        result.hasTotalIdleTime = true;
        result.totalIdleTime_ = value;
        return this;
      }
      public Builder ClearTotalIdleTime() {
        PrepareBuilder();
        result.hasTotalIdleTime = false;
        result.totalIdleTime_ = -1L;
        return this;
      }
      
      public bool HasCurrentIdleTime {
        get { return result.hasCurrentIdleTime; }
      }
      public long CurrentIdleTime {
        get { return result.CurrentIdleTime; }
        set { SetCurrentIdleTime(value); }
      }
      public Builder SetCurrentIdleTime(long value) {
        PrepareBuilder();
        result.hasCurrentIdleTime = true;
        result.currentIdleTime_ = value;
        return this;
      }
      public Builder ClearCurrentIdleTime() {
        PrepareBuilder();
        result.hasCurrentIdleTime = false;
        result.currentIdleTime_ = -1L;
        return this;
      }
      
      public bool HasTotalCpus {
        get { return result.hasTotalCpus; }
      }
      public int TotalCpus {
        get { return result.TotalCpus; }
        set { SetTotalCpus(value); }
      }
      public Builder SetTotalCpus(int value) {
        PrepareBuilder();
        result.hasTotalCpus = true;
        result.totalCpus_ = value;
        return this;
      }
      public Builder ClearTotalCpus() {
        PrepareBuilder();
        result.hasTotalCpus = false;
        result.totalCpus_ = -1;
        return this;
      }
      
      public bool HasCurrentCpuLoad {
        get { return result.hasCurrentCpuLoad; }
      }
      public double CurrentCpuLoad {
        get { return result.CurrentCpuLoad; }
        set { SetCurrentCpuLoad(value); }
      }
      public Builder SetCurrentCpuLoad(double value) {
        PrepareBuilder();
        result.hasCurrentCpuLoad = true;
        result.currentCpuLoad_ = value;
        return this;
      }
      public Builder ClearCurrentCpuLoad() {
        PrepareBuilder();
        result.hasCurrentCpuLoad = false;
        result.currentCpuLoad_ = -1D;
        return this;
      }
      
      public bool HasAverageCpuLoad {
        get { return result.hasAverageCpuLoad; }
      }
      public double AverageCpuLoad {
        get { return result.AverageCpuLoad; }
        set { SetAverageCpuLoad(value); }
      }
      public Builder SetAverageCpuLoad(double value) {
        PrepareBuilder();
        result.hasAverageCpuLoad = true;
        result.averageCpuLoad_ = value;
        return this;
      }
      public Builder ClearAverageCpuLoad() {
        PrepareBuilder();
        result.hasAverageCpuLoad = false;
        result.averageCpuLoad_ = -1D;
        return this;
      }
      
      public bool HasHeapMemoryInitialized {
        get { return result.hasHeapMemoryInitialized; }
      }
      public long HeapMemoryInitialized {
        get { return result.HeapMemoryInitialized; }
        set { SetHeapMemoryInitialized(value); }
      }
      public Builder SetHeapMemoryInitialized(long value) {
        PrepareBuilder();
        result.hasHeapMemoryInitialized = true;
        result.heapMemoryInitialized_ = value;
        return this;
      }
      public Builder ClearHeapMemoryInitialized() {
        PrepareBuilder();
        result.hasHeapMemoryInitialized = false;
        result.heapMemoryInitialized_ = -1L;
        return this;
      }
      
      public bool HasHeapMemoryUsed {
        get { return result.hasHeapMemoryUsed; }
      }
      public long HeapMemoryUsed {
        get { return result.HeapMemoryUsed; }
        set { SetHeapMemoryUsed(value); }
      }
      public Builder SetHeapMemoryUsed(long value) {
        PrepareBuilder();
        result.hasHeapMemoryUsed = true;
        result.heapMemoryUsed_ = value;
        return this;
      }
      public Builder ClearHeapMemoryUsed() {
        PrepareBuilder();
        result.hasHeapMemoryUsed = false;
        result.heapMemoryUsed_ = -1L;
        return this;
      }
      
      public bool HasHeapMemoryCommitted {
        get { return result.hasHeapMemoryCommitted; }
      }
      public long HeapMemoryCommitted {
        get { return result.HeapMemoryCommitted; }
        set { SetHeapMemoryCommitted(value); }
      }
      public Builder SetHeapMemoryCommitted(long value) {
        PrepareBuilder();
        result.hasHeapMemoryCommitted = true;
        result.heapMemoryCommitted_ = value;
        return this;
      }
      public Builder ClearHeapMemoryCommitted() {
        PrepareBuilder();
        result.hasHeapMemoryCommitted = false;
        result.heapMemoryCommitted_ = -1L;
        return this;
      }
      
      public bool HasHeapMemoryMaximum {
        get { return result.hasHeapMemoryMaximum; }
      }
      public long HeapMemoryMaximum {
        get { return result.HeapMemoryMaximum; }
        set { SetHeapMemoryMaximum(value); }
      }
      public Builder SetHeapMemoryMaximum(long value) {
        PrepareBuilder();
        result.hasHeapMemoryMaximum = true;
        result.heapMemoryMaximum_ = value;
        return this;
      }
      public Builder ClearHeapMemoryMaximum() {
        PrepareBuilder();
        result.hasHeapMemoryMaximum = false;
        result.heapMemoryMaximum_ = -1L;
        return this;
      }
      
      public bool HasNonHeapMemoryInitialized {
        get { return result.hasNonHeapMemoryInitialized; }
      }
      public long NonHeapMemoryInitialized {
        get { return result.NonHeapMemoryInitialized; }
        set { SetNonHeapMemoryInitialized(value); }
      }
      public Builder SetNonHeapMemoryInitialized(long value) {
        PrepareBuilder();
        result.hasNonHeapMemoryInitialized = true;
        result.nonHeapMemoryInitialized_ = value;
        return this;
      }
      public Builder ClearNonHeapMemoryInitialized() {
        PrepareBuilder();
        result.hasNonHeapMemoryInitialized = false;
        result.nonHeapMemoryInitialized_ = -1L;
        return this;
      }
      
      public bool HasNonHeapMemoryUsed {
        get { return result.hasNonHeapMemoryUsed; }
      }
      public long NonHeapMemoryUsed {
        get { return result.NonHeapMemoryUsed; }
        set { SetNonHeapMemoryUsed(value); }
      }
      public Builder SetNonHeapMemoryUsed(long value) {
        PrepareBuilder();
        result.hasNonHeapMemoryUsed = true;
        result.nonHeapMemoryUsed_ = value;
        return this;
      }
      public Builder ClearNonHeapMemoryUsed() {
        PrepareBuilder();
        result.hasNonHeapMemoryUsed = false;
        result.nonHeapMemoryUsed_ = -1L;
        return this;
      }
      
      public bool HasNonHeapMemoryCommitted {
        get { return result.hasNonHeapMemoryCommitted; }
      }
      public long NonHeapMemoryCommitted {
        get { return result.NonHeapMemoryCommitted; }
        set { SetNonHeapMemoryCommitted(value); }
      }
      public Builder SetNonHeapMemoryCommitted(long value) {
        PrepareBuilder();
        result.hasNonHeapMemoryCommitted = true;
        result.nonHeapMemoryCommitted_ = value;
        return this;
      }
      public Builder ClearNonHeapMemoryCommitted() {
        PrepareBuilder();
        result.hasNonHeapMemoryCommitted = false;
        result.nonHeapMemoryCommitted_ = -1L;
        return this;
      }
      
      public bool HasNonHeapMemoryMaximum {
        get { return result.hasNonHeapMemoryMaximum; }
      }
      public long NonHeapMemoryMaximum {
        get { return result.NonHeapMemoryMaximum; }
        set { SetNonHeapMemoryMaximum(value); }
      }
      public Builder SetNonHeapMemoryMaximum(long value) {
        PrepareBuilder();
        result.hasNonHeapMemoryMaximum = true;
        result.nonHeapMemoryMaximum_ = value;
        return this;
      }
      public Builder ClearNonHeapMemoryMaximum() {
        PrepareBuilder();
        result.hasNonHeapMemoryMaximum = false;
        result.nonHeapMemoryMaximum_ = -1L;
        return this;
      }
      
      public bool HasUpTime {
        get { return result.hasUpTime; }
      }
      public long UpTime {
        get { return result.UpTime; }
        set { SetUpTime(value); }
      }
      public Builder SetUpTime(long value) {
        PrepareBuilder();
        result.hasUpTime = true;
        result.upTime_ = value;
        return this;
      }
      public Builder ClearUpTime() {
        PrepareBuilder();
        result.hasUpTime = false;
        result.upTime_ = -1L;
        return this;
      }
      
      public bool HasStartTime {
        get { return result.hasStartTime; }
      }
      public long StartTime {
        get { return result.StartTime; }
        set { SetStartTime(value); }
      }
      public Builder SetStartTime(long value) {
        PrepareBuilder();
        result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder ClearStartTime() {
        PrepareBuilder();
        result.hasStartTime = false;
        result.startTime_ = -1L;
        return this;
      }
      
      public bool HasNodeStartTime {
        get { return result.hasNodeStartTime; }
      }
      public long NodeStartTime {
        get { return result.NodeStartTime; }
        set { SetNodeStartTime(value); }
      }
      public Builder SetNodeStartTime(long value) {
        PrepareBuilder();
        result.hasNodeStartTime = true;
        result.nodeStartTime_ = value;
        return this;
      }
      public Builder ClearNodeStartTime() {
        PrepareBuilder();
        result.hasNodeStartTime = false;
        result.nodeStartTime_ = -1L;
        return this;
      }
      
      public bool HasCurrentThreadCount {
        get { return result.hasCurrentThreadCount; }
      }
      public int CurrentThreadCount {
        get { return result.CurrentThreadCount; }
        set { SetCurrentThreadCount(value); }
      }
      public Builder SetCurrentThreadCount(int value) {
        PrepareBuilder();
        result.hasCurrentThreadCount = true;
        result.currentThreadCount_ = value;
        return this;
      }
      public Builder ClearCurrentThreadCount() {
        PrepareBuilder();
        result.hasCurrentThreadCount = false;
        result.currentThreadCount_ = -1;
        return this;
      }
      
      public bool HasMaximumThreadCount {
        get { return result.hasMaximumThreadCount; }
      }
      public int MaximumThreadCount {
        get { return result.MaximumThreadCount; }
        set { SetMaximumThreadCount(value); }
      }
      public Builder SetMaximumThreadCount(int value) {
        PrepareBuilder();
        result.hasMaximumThreadCount = true;
        result.maximumThreadCount_ = value;
        return this;
      }
      public Builder ClearMaximumThreadCount() {
        PrepareBuilder();
        result.hasMaximumThreadCount = false;
        result.maximumThreadCount_ = -1;
        return this;
      }
      
      public bool HasTotalStartedThreadCount {
        get { return result.hasTotalStartedThreadCount; }
      }
      public long TotalStartedThreadCount {
        get { return result.TotalStartedThreadCount; }
        set { SetTotalStartedThreadCount(value); }
      }
      public Builder SetTotalStartedThreadCount(long value) {
        PrepareBuilder();
        result.hasTotalStartedThreadCount = true;
        result.totalStartedThreadCount_ = value;
        return this;
      }
      public Builder ClearTotalStartedThreadCount() {
        PrepareBuilder();
        result.hasTotalStartedThreadCount = false;
        result.totalStartedThreadCount_ = -1L;
        return this;
      }
      
      public bool HasCurrentDaemonThreadCount {
        get { return result.hasCurrentDaemonThreadCount; }
      }
      public int CurrentDaemonThreadCount {
        get { return result.CurrentDaemonThreadCount; }
        set { SetCurrentDaemonThreadCount(value); }
      }
      public Builder SetCurrentDaemonThreadCount(int value) {
        PrepareBuilder();
        result.hasCurrentDaemonThreadCount = true;
        result.currentDaemonThreadCount_ = value;
        return this;
      }
      public Builder ClearCurrentDaemonThreadCount() {
        PrepareBuilder();
        result.hasCurrentDaemonThreadCount = false;
        result.currentDaemonThreadCount_ = -1;
        return this;
      }
      
      public bool HasFileSystemFreeSpace {
        get { return result.hasFileSystemFreeSpace; }
      }
      public long FileSystemFreeSpace {
        get { return result.FileSystemFreeSpace; }
        set { SetFileSystemFreeSpace(value); }
      }
      public Builder SetFileSystemFreeSpace(long value) {
        PrepareBuilder();
        result.hasFileSystemFreeSpace = true;
        result.fileSystemFreeSpace_ = value;
        return this;
      }
      public Builder ClearFileSystemFreeSpace() {
        PrepareBuilder();
        result.hasFileSystemFreeSpace = false;
        result.fileSystemFreeSpace_ = -1L;
        return this;
      }
      
      public bool HasFileSystemTotalSpace {
        get { return result.hasFileSystemTotalSpace; }
      }
      public long FileSystemTotalSpace {
        get { return result.FileSystemTotalSpace; }
        set { SetFileSystemTotalSpace(value); }
      }
      public Builder SetFileSystemTotalSpace(long value) {
        PrepareBuilder();
        result.hasFileSystemTotalSpace = true;
        result.fileSystemTotalSpace_ = value;
        return this;
      }
      public Builder ClearFileSystemTotalSpace() {
        PrepareBuilder();
        result.hasFileSystemTotalSpace = false;
        result.fileSystemTotalSpace_ = -1L;
        return this;
      }
      
      public bool HasFileSystemUsableSpace {
        get { return result.hasFileSystemUsableSpace; }
      }
      public long FileSystemUsableSpace {
        get { return result.FileSystemUsableSpace; }
        set { SetFileSystemUsableSpace(value); }
      }
      public Builder SetFileSystemUsableSpace(long value) {
        PrepareBuilder();
        result.hasFileSystemUsableSpace = true;
        result.fileSystemUsableSpace_ = value;
        return this;
      }
      public Builder ClearFileSystemUsableSpace() {
        PrepareBuilder();
        result.hasFileSystemUsableSpace = false;
        result.fileSystemUsableSpace_ = -1L;
        return this;
      }
      
      public bool HasLastDataVersion {
        get { return result.hasLastDataVersion; }
      }
      public long LastDataVersion {
        get { return result.LastDataVersion; }
        set { SetLastDataVersion(value); }
      }
      public Builder SetLastDataVersion(long value) {
        PrepareBuilder();
        result.hasLastDataVersion = true;
        result.lastDataVersion_ = value;
        return this;
      }
      public Builder ClearLastDataVersion() {
        PrepareBuilder();
        result.hasLastDataVersion = false;
        result.lastDataVersion_ = -1L;
        return this;
      }
    }
    static ProtoNodeMetricsBean() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  internal sealed partial class ProtoNodeBean : pb::GeneratedMessage<ProtoNodeBean, ProtoNodeBean.Builder> {
    private ProtoNodeBean() { }
    private static readonly ProtoNodeBean defaultInstance = new ProtoNodeBean().MakeReadOnly();
    private static readonly string[] _protoNodeBeanFieldNames = new string[] { "attributes", "caches", "externalAddress", "internalAddress", "jettyPort", "metrics", "nodeId", "tcpPort" };
    private static readonly uint[] _protoNodeBeanFieldTags = new uint[] { 58, 74, 26, 18, 40, 50, 10, 32 };
    public static ProtoNodeBean DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoNodeBean DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoNodeBean ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoNodeBean__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoNodeBean, ProtoNodeBean.Builder> InternalFieldAccessors {
      get { return global::GridGain.Client.Impl.Protobuf.GridClientMessages.internal__static_org_gridgain_client_message_ProtoNodeBean__FieldAccessorTable; }
    }
    
    public const int NodeIdFieldNumber = 1;
    private bool hasNodeId;
    private string nodeId_ = "";
    public bool HasNodeId {
      get { return hasNodeId; }
    }
    public string NodeId {
      get { return nodeId_; }
    }
    
    public const int InternalAddressFieldNumber = 2;
    private pbc::PopsicleList<string> internalAddress_ = new pbc::PopsicleList<string>();
    public scg::IList<string> InternalAddressList {
      get { return pbc::Lists.AsReadOnly(internalAddress_); }
    }
    public int InternalAddressCount {
      get { return internalAddress_.Count; }
    }
    public string GetInternalAddress(int index) {
      return internalAddress_[index];
    }
    
    public const int ExternalAddressFieldNumber = 3;
    private pbc::PopsicleList<string> externalAddress_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ExternalAddressList {
      get { return pbc::Lists.AsReadOnly(externalAddress_); }
    }
    public int ExternalAddressCount {
      get { return externalAddress_.Count; }
    }
    public string GetExternalAddress(int index) {
      return externalAddress_[index];
    }
    
    public const int TcpPortFieldNumber = 4;
    private bool hasTcpPort;
    private int tcpPort_;
    public bool HasTcpPort {
      get { return hasTcpPort; }
    }
    public int TcpPort {
      get { return tcpPort_; }
    }
    
    public const int JettyPortFieldNumber = 5;
    private bool hasJettyPort;
    private int jettyPort_;
    public bool HasJettyPort {
      get { return hasJettyPort; }
    }
    public int JettyPort {
      get { return jettyPort_; }
    }
    
    public const int MetricsFieldNumber = 6;
    private bool hasMetrics;
    private global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean metrics_;
    public bool HasMetrics {
      get { return hasMetrics; }
    }
    public global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean Metrics {
      get { return metrics_ ?? global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.DefaultInstance; }
    }
    
    public const int AttributesFieldNumber = 7;
    private bool hasAttributes;
    private global::GridGain.Client.Impl.Protobuf.Map attributes_;
    public bool HasAttributes {
      get { return hasAttributes; }
    }
    public global::GridGain.Client.Impl.Protobuf.Map Attributes {
      get { return attributes_ ?? global::GridGain.Client.Impl.Protobuf.Map.DefaultInstance; }
    }
    
    public const int CachesFieldNumber = 9;
    private bool hasCaches;
    private global::GridGain.Client.Impl.Protobuf.Map caches_;
    public bool HasCaches {
      get { return hasCaches; }
    }
    public global::GridGain.Client.Impl.Protobuf.Map Caches {
      get { return caches_ ?? global::GridGain.Client.Impl.Protobuf.Map.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNodeId) return false;
        if (!hasTcpPort) return false;
        if (!hasJettyPort) return false;
        if (HasMetrics) {
          if (!Metrics.IsInitialized) return false;
        }
        if (HasAttributes) {
          if (!Attributes.IsInitialized) return false;
        }
        if (HasCaches) {
          if (!Caches.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoNodeBeanFieldNames;
      if (hasNodeId) {
        output.WriteString(1, field_names[6], NodeId);
      }
      if (internalAddress_.Count > 0) {
        output.WriteStringArray(2, field_names[3], internalAddress_);
      }
      if (externalAddress_.Count > 0) {
        output.WriteStringArray(3, field_names[2], externalAddress_);
      }
      if (hasTcpPort) {
        output.WriteInt32(4, field_names[7], TcpPort);
      }
      if (hasJettyPort) {
        output.WriteInt32(5, field_names[4], JettyPort);
      }
      if (hasMetrics) {
        output.WriteMessage(6, field_names[5], Metrics);
      }
      if (hasAttributes) {
        output.WriteMessage(7, field_names[0], Attributes);
      }
      if (hasCaches) {
        output.WriteMessage(9, field_names[1], Caches);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNodeId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, NodeId);
        }
        {
          int dataSize = 0;
          foreach (string element in InternalAddressList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * internalAddress_.Count;
        }
        {
          int dataSize = 0;
          foreach (string element in ExternalAddressList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * externalAddress_.Count;
        }
        if (hasTcpPort) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, TcpPort);
        }
        if (hasJettyPort) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, JettyPort);
        }
        if (hasMetrics) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Metrics);
        }
        if (hasAttributes) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, Attributes);
        }
        if (hasCaches) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, Caches);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoNodeBean ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoNodeBean ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoNodeBean ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoNodeBean ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoNodeBean ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoNodeBean ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoNodeBean ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoNodeBean ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoNodeBean ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoNodeBean ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoNodeBean MakeReadOnly() {
      internalAddress_.MakeReadOnly();
      externalAddress_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoNodeBean prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    internal sealed partial class Builder : pb::GeneratedBuilder<ProtoNodeBean, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoNodeBean cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoNodeBean result;
      
      private ProtoNodeBean PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoNodeBean original = result;
          result = new ProtoNodeBean();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoNodeBean MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoNodeBean.Descriptor; }
      }
      
      public override ProtoNodeBean DefaultInstanceForType {
        get { return global::GridGain.Client.Impl.Protobuf.ProtoNodeBean.DefaultInstance; }
      }
      
      public override ProtoNodeBean BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoNodeBean) {
          return MergeFrom((ProtoNodeBean) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoNodeBean other) {
        if (other == global::GridGain.Client.Impl.Protobuf.ProtoNodeBean.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNodeId) {
          NodeId = other.NodeId;
        }
        if (other.internalAddress_.Count != 0) {
          result.internalAddress_.Add(other.internalAddress_);
        }
        if (other.externalAddress_.Count != 0) {
          result.externalAddress_.Add(other.externalAddress_);
        }
        if (other.HasTcpPort) {
          TcpPort = other.TcpPort;
        }
        if (other.HasJettyPort) {
          JettyPort = other.JettyPort;
        }
        if (other.HasMetrics) {
          MergeMetrics(other.Metrics);
        }
        if (other.HasAttributes) {
          MergeAttributes(other.Attributes);
        }
        if (other.HasCaches) {
          MergeCaches(other.Caches);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoNodeBeanFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoNodeBeanFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNodeId = input.ReadString(ref result.nodeId_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.internalAddress_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.externalAddress_);
              break;
            }
            case 32: {
              result.hasTcpPort = input.ReadInt32(ref result.tcpPort_);
              break;
            }
            case 40: {
              result.hasJettyPort = input.ReadInt32(ref result.jettyPort_);
              break;
            }
            case 50: {
              global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.CreateBuilder();
              if (result.hasMetrics) {
                subBuilder.MergeFrom(Metrics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Metrics = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::GridGain.Client.Impl.Protobuf.Map.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.Map.CreateBuilder();
              if (result.hasAttributes) {
                subBuilder.MergeFrom(Attributes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Attributes = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::GridGain.Client.Impl.Protobuf.Map.Builder subBuilder = global::GridGain.Client.Impl.Protobuf.Map.CreateBuilder();
              if (result.hasCaches) {
                subBuilder.MergeFrom(Caches);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Caches = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNodeId {
        get { return result.hasNodeId; }
      }
      public string NodeId {
        get { return result.NodeId; }
        set { SetNodeId(value); }
      }
      public Builder SetNodeId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNodeId = true;
        result.nodeId_ = value;
        return this;
      }
      public Builder ClearNodeId() {
        PrepareBuilder();
        result.hasNodeId = false;
        result.nodeId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> InternalAddressList {
        get { return PrepareBuilder().internalAddress_; }
      }
      public int InternalAddressCount {
        get { return result.InternalAddressCount; }
      }
      public string GetInternalAddress(int index) {
        return result.GetInternalAddress(index);
      }
      public Builder SetInternalAddress(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.internalAddress_[index] = value;
        return this;
      }
      public Builder AddInternalAddress(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.internalAddress_.Add(value);
        return this;
      }
      public Builder AddRangeInternalAddress(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.internalAddress_.Add(values);
        return this;
      }
      public Builder ClearInternalAddress() {
        PrepareBuilder();
        result.internalAddress_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> ExternalAddressList {
        get { return PrepareBuilder().externalAddress_; }
      }
      public int ExternalAddressCount {
        get { return result.ExternalAddressCount; }
      }
      public string GetExternalAddress(int index) {
        return result.GetExternalAddress(index);
      }
      public Builder SetExternalAddress(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.externalAddress_[index] = value;
        return this;
      }
      public Builder AddExternalAddress(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.externalAddress_.Add(value);
        return this;
      }
      public Builder AddRangeExternalAddress(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.externalAddress_.Add(values);
        return this;
      }
      public Builder ClearExternalAddress() {
        PrepareBuilder();
        result.externalAddress_.Clear();
        return this;
      }
      
      public bool HasTcpPort {
        get { return result.hasTcpPort; }
      }
      public int TcpPort {
        get { return result.TcpPort; }
        set { SetTcpPort(value); }
      }
      public Builder SetTcpPort(int value) {
        PrepareBuilder();
        result.hasTcpPort = true;
        result.tcpPort_ = value;
        return this;
      }
      public Builder ClearTcpPort() {
        PrepareBuilder();
        result.hasTcpPort = false;
        result.tcpPort_ = 0;
        return this;
      }
      
      public bool HasJettyPort {
        get { return result.hasJettyPort; }
      }
      public int JettyPort {
        get { return result.JettyPort; }
        set { SetJettyPort(value); }
      }
      public Builder SetJettyPort(int value) {
        PrepareBuilder();
        result.hasJettyPort = true;
        result.jettyPort_ = value;
        return this;
      }
      public Builder ClearJettyPort() {
        PrepareBuilder();
        result.hasJettyPort = false;
        result.jettyPort_ = 0;
        return this;
      }
      
      public bool HasMetrics {
       get { return result.hasMetrics; }
      }
      public global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean Metrics {
        get { return result.Metrics; }
        set { SetMetrics(value); }
      }
      public Builder SetMetrics(global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMetrics = true;
        result.metrics_ = value;
        return this;
      }
      public Builder SetMetrics(global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMetrics = true;
        result.metrics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMetrics(global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMetrics &&
            result.metrics_ != global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.DefaultInstance) {
            result.metrics_ = global::GridGain.Client.Impl.Protobuf.ProtoNodeMetricsBean.CreateBuilder(result.metrics_).MergeFrom(value).BuildPartial();
        } else {
          result.metrics_ = value;
        }
        result.hasMetrics = true;
        return this;
      }
      public Builder ClearMetrics() {
        PrepareBuilder();
        result.hasMetrics = false;
        result.metrics_ = null;
        return this;
      }
      
      public bool HasAttributes {
       get { return result.hasAttributes; }
      }
      public global::GridGain.Client.Impl.Protobuf.Map Attributes {
        get { return result.Attributes; }
        set { SetAttributes(value); }
      }
      public Builder SetAttributes(global::GridGain.Client.Impl.Protobuf.Map value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAttributes = true;
        result.attributes_ = value;
        return this;
      }
      public Builder SetAttributes(global::GridGain.Client.Impl.Protobuf.Map.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAttributes = true;
        result.attributes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAttributes(global::GridGain.Client.Impl.Protobuf.Map value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAttributes &&
            result.attributes_ != global::GridGain.Client.Impl.Protobuf.Map.DefaultInstance) {
            result.attributes_ = global::GridGain.Client.Impl.Protobuf.Map.CreateBuilder(result.attributes_).MergeFrom(value).BuildPartial();
        } else {
          result.attributes_ = value;
        }
        result.hasAttributes = true;
        return this;
      }
      public Builder ClearAttributes() {
        PrepareBuilder();
        result.hasAttributes = false;
        result.attributes_ = null;
        return this;
      }
      
      public bool HasCaches {
       get { return result.hasCaches; }
      }
      public global::GridGain.Client.Impl.Protobuf.Map Caches {
        get { return result.Caches; }
        set { SetCaches(value); }
      }
      public Builder SetCaches(global::GridGain.Client.Impl.Protobuf.Map value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCaches = true;
        result.caches_ = value;
        return this;
      }
      public Builder SetCaches(global::GridGain.Client.Impl.Protobuf.Map.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCaches = true;
        result.caches_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCaches(global::GridGain.Client.Impl.Protobuf.Map value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCaches &&
            result.caches_ != global::GridGain.Client.Impl.Protobuf.Map.DefaultInstance) {
            result.caches_ = global::GridGain.Client.Impl.Protobuf.Map.CreateBuilder(result.caches_).MergeFrom(value).BuildPartial();
        } else {
          result.caches_ = value;
        }
        result.hasCaches = true;
        return this;
      }
      public Builder ClearCaches() {
        PrepareBuilder();
        result.hasCaches = false;
        result.caches_ = null;
        return this;
      }
    }
    static ProtoNodeBean() {
      object.ReferenceEquals(global::GridGain.Client.Impl.Protobuf.GridClientMessages.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
